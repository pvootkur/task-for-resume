package com.sic.tasa.repositories.impl;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaDelete;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.CriteriaUpdate;
import javax.persistence.criteria.Expression;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;
import javax.sql.DataSource;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Order;
import org.springframework.dao.DataAccessException;
import org.springframework.orm.hibernate4.HibernateTemplate;
import org.springframework.stereotype.Repository;

import com.sic.tasa.repositories.IFrmDivdMaintRepository;
import com.sic.tasa.dataobject.FrmDivdMaintBO;
import com.sic.tasa.util.AtmaLogger;
import com.sic.tasa.exceptions.TASADataAccessException;


/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@Repository
public class FrmDivdMaintRepositoryImpl implements IFrmDivdMaintRepository{

    private static AtmaLogger LOGGER = AtmaLogger.create(FrmDivdMaintRepositoryImpl.class.getName());

    private HibernateTemplate template;


    /*
	 * Method cmdcomputenavClick1
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdcomputenavClick1(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdcomputenavClick1 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "SELECT eiin.nav_amt, eiin.audited_nav_amt,eiin.audited_nav_notified_dt "
	    		+ "FROM e_invst_instrument_nav eiin WHERE "
	    		+ "eiin.e_invst_instrument_seq =  .cboInvstInstrmntSeq.Text and "
	    		+ "eiin.market_closing_dt = to_date('format()(.DTPActReinvestedDate.Value, mm/dd/yyyy) + ','MM/DD/YYYY') ";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdcomputenavClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdcomputenavClick1()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdsaveClick1
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdsaveClick1(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick1 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "SELECT pl2.RP_MIP_SEQ FROM RP_MODIFIED_INVESTMENT_POOL pl2 "
	    		+ "WHERE  strSQL2";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick1()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdsaveClick2
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdsaveClick2(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick2 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "UPDATE dividend_detail set estimated_dividend_rt = ";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick2()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdsaveClick3
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdsaveClick3(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick3 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "UPDATE rp_mip_dividend_detail set dividend_share_nbr = ";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick3()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick3()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdsaveClick4
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdsaveClick4(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick4 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "INSERT INTO rp_mip_dividend_detail (rp_mip_seq, dividend_detail_seq,"
	    		+ "dividend_share_nbr, dividend_share_dollar_amt)values ( dblCurrMipSeq + .SubItems(12) + ";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick4()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick4()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdsaveClick5
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdsaveClick5(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick5 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "INSERT into dividend_detail (e_invst_instrument_seq,dividend_type_cd,"
	    		+ "as_of_dt,estimated_dividend_rt,actual_dividend_rt,dividend_applied_dt,"
	    		+ "dividend_reinvstd_dt,rp_nav_dividend_src_type_cd)"
	    		+ " VALUES(cboInvstInstrmntSeq.Text + , '.Text + ',"
	    		+ "to_date(' format()(DTPExDate.Value, 'mm/dd/yyyy') + ','MM/DD/YYYY') , ";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick5()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick5()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdsaveClick6
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdsaveClick6(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick6 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "SELECT dividend_detail_seq FROM dividend_detail WHERE "
	    		+ "e_invst_instrument_seq =cboInvstInstrmntSeq.Text + and "
	    		+ "dividend_type_cd = '.Text + ' and as_of_dt = to_date('format()(DTPExDate.Value,"
	    		+ "'mm/dd/yyyy') + ','MM/DD/YYYY')";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick6()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick6()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdsaveClick7
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdsaveClick7(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick7 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "INSERT INTO rp_mip_dividend_detail (dividend_detail_seq, rp_mip_seq,"
	    		+ "dividend_share_nbr, dividend_share_dollar_amt) "
	    		+ "values ( dblSeq + ,  dblCurrMipSeq + , ";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick7()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick7()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdsaveClick8
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdsaveClick8(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick8 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "update e_invst_instrument_nav set audited_nav_amt = MstrAudited + ,"
	    		+ " audited_nav_notified_dt = to_date(' format()(Now, 'mm/dd/yyyy')"
	    		+ "'MM/DD/YYYY') where e_invst_instrument_seq = cboInvstInstrmntSeq.Text + and "
	    		+ "market_closing_dt = to_date('format()(.SubItems(2), 'mm/dd/yyyy') + ','MM/DD/YYYY')";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick8()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick8()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdsaveClick9
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdsaveClick9(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick9 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "insert into e_invst_instrument_nav (e_invst_instrument_seq,"
	    		+ " market_closing_dt, nav_amt,audited_nav_amt, audited_nav_notified_dt)"
	    		+ " values (cboInvstInstrmntSeq.Text + ,to_date(' format()(.SubItems(2), "
	    		+ "'mm/dd/yyyy') +'MM/DD/YYYY') , null,";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick9()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick9()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdselectfundClick1
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdselectfundClick1(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdselectfundClick1 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "SELECT dd.dividend_type_cd, dd.as_of_dt, dd.estimated_dividend_rt,"
	    		+ "dd.actual_dividend_rt, rmdd.dividend_share_nbr,rmdd.dividend_share_dollar_amt,"
	    		+ " dd.dividend_applied_dt, dd.dividend_reinvstd_dt,"
	    		+ " dd.dividend_detail_seq dd_dividend_detail_seq,"
	    		+ "rmdd.dividend_detail_seq rmdd_dividend_detail_seq FROM dividend_detail dd,"
	    		+ " rp_mip_dividend_detail rmdd WHERE dd.e_invst_instrument_seq =  .cboInvstInstrmntSeq.Text "
	    		+ "and dd.dividend_detail_seq = rmdd.dividend_detail_seq(+) and "
	    		+ "rmdd.rp_mip_seq(+) =  .cboMIPSeq.Text and dd.as_of_dt = "
	    		+ "to_date('format()(.DTPExDate.Value, 'mm/dd/yyyy') ','MM/DD/YYYY') ORDER BY dd.dividend_type_cd";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdselectfundClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdselectfundClick1()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method cmdselectfundClick2
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> cmdselectfundClick2(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdselectfundClick2 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "SELECT eiin.nav_amt, eiin.audited_nav_amt, eiin.audited_nav_notified_dt "
	    		+ "FROM e_invst_instrument_nav eiin WHERE"
	    		+ " eiin.e_invst_instrument_seq =  .cboInvstInstrmntSeq.Text + and"
	    		+ " eiin.market_closing_dt = to_date('format()(rstDivDetail!dividend_reinvstd_dt, 'mm/dd/yyyy'),"
	    		+ "'MM/DD/YYYY') ";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdselectfundClick2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdselectfundClick2()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method formLoad1
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> formLoad1(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: formLoad1 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "SELECT full_nm, rp_mip_seq, e_invst_instrument_seq FROM"
	    		+ " rp_modified_investment_pool WHERE status_txt in ('SETUP', 'ACTIVE') and"
	    		+ " e_invst_instrument_seq is not null ORDER BY full_nm";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: formLoad1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: formLoad1()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }
    /*
	 * Method formLoad2
	 * @param frmdivdmaintBOReq
	 * @return frmdivdmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmDivdMaintBO> formLoad2(FrmDivdMaintBO frmdivdmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: formLoad2 and argument : "+frmdivdmaintBOReq); 
	    List<FrmDivdMaintBO> frmdivdmaintBOResp =new ArrayList<FrmDivdMaintBO>();
	    String sql = "SELECT dividend_type_cd, descp FROM dividend_type ORDER BY descp";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmdivdmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: formLoad2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: formLoad2()"+"return : "+frmdivdmaintBOResp);
         return frmdivdmaintBOResp;
    }

}