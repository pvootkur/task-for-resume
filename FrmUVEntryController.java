package com.sic.tasa.rest;


import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.sic.tasa.dataobject.FrmUVEntryBO;
import com.sic.tasa.exceptions.TASARESTException;
import com.sic.tasa.service.IFrmUVEntryService;
import com.sic.tasa.util.AtmaLogger;

/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@Controller
@RequestMapping(value = "/FrmUVEntryController")
public class FrmUVEntryController {

    private static final AtmaLogger LOGGER = AtmaLogger.create(FrmUVEntryController.class);

		@Autowired
		private IFrmUVEntryService frmuventryService;

		public void setFrmUVEntryService(IFrmUVEntryService frmuventryService) {
		    this.frmuventryService = frmuventryService;
		}


    /*
     * Method populatecontract
     * @param frmuventryBOReq
     * @return frmuventryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/populatecontract" , method = RequestMethod.POST)
    public List<FrmUVEntryBO> populatecontract() throws TASARESTException{    
        LOGGER.debug("Entering into the method: populatecontract"); 
        List<FrmUVEntryBO> frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();
        try{
            frmuventryBOResp = frmuventryService.populatecontract();
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: populatecontract and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: populatecontract()and return : "+frmuventryBOResp);
        return frmuventryBOResp;
    }
    /*
     * Method populatefunds
     * @param frmuventryBOReq
     * @return frmuventryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/populatefunds" , method = RequestMethod.POST)
    public List<FrmUVEntryBO> populatefunds(FrmUVEntryBO frmuventryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: populatefunds and argument : "+frmuventryBOReq); 
        List<FrmUVEntryBO> frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();
        try{
            frmuventryBOResp = frmuventryService.populatefunds(frmuventryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: populatefunds and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: populatefunds()and return : "+frmuventryBOResp);
        return frmuventryBOResp;
    }
    /*
     * Method cbocontractclick
     * @param frmuventryBOReq
     * @return frmuventryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cbocontractclick" , method = RequestMethod.POST)
    public List<FrmUVEntryBO> cbocontractclick(FrmUVEntryBO frmuventryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cbocontractclick and argument : "+frmuventryBOReq); 
        List<FrmUVEntryBO> frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();
        try{
            frmuventryBOResp = frmuventryService.cbocontractclick(frmuventryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cbocontractclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cbocontractclick()and return : "+frmuventryBOResp);
        return frmuventryBOResp;
    }
    /*
     * Method cmdaddmodifyclick1
     * @param frmuventryBOReq
     * @return frmuventryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdaddmodifyclick1" , method = RequestMethod.POST)
    public List<FrmUVEntryBO> cmdaddmodifyclick1(FrmUVEntryBO frmuventryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdaddmodifyclick1 and argument : "+frmuventryBOReq); 
        List<FrmUVEntryBO> frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();
        try{
            frmuventryBOResp = frmuventryService.cmdaddmodifyclick1(frmuventryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdaddmodifyclick1 and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdaddmodifyclick1()and return : "+frmuventryBOResp);
        return frmuventryBOResp;
    }
    /*
     * Method cmdaddmodifyclick2
     * @param frmuventryBOReq
     * @return frmuventryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdaddmodifyclick2" , method = RequestMethod.POST)
    public List<FrmUVEntryBO> cmdaddmodifyclick(FrmUVEntryBO frmuventryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdaddmodifyclick2 and argument : "+frmuventryBOReq); 
        List<FrmUVEntryBO> frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();
        try{
            frmuventryBOResp = frmuventryService.cmdaddmodifyclick2(frmuventryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdaddmodifyclick2 and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdaddmodifyclick()and return : "+frmuventryBOResp);
        return frmuventryBOResp;
    }
    /*
     * Method cmddeleteclick
     * @param frmuventryBOReq
     * @return frmuventryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmddeleteclick" , method = RequestMethod.POST)
    public List<FrmUVEntryBO> cmddeleteclick(FrmUVEntryBO frmuventryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmddeleteclick and argument : "+frmuventryBOReq); 
        List<FrmUVEntryBO> frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();
        try{
            frmuventryBOResp = frmuventryService.cmddeleteclick(frmuventryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmddeleteclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmddeleteclick()and return : "+frmuventryBOResp);
        return frmuventryBOResp;
    }
    /*
     * Method cmdselfundclick
     * @param frmuventryBOReq
     * @return frmuventryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdselfundclick" , method = RequestMethod.POST)
    public List<FrmUVEntryBO> cmdselfundclick(FrmUVEntryBO frmuventryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdselfundclick and argument : "+frmuventryBOReq); 
        List<FrmUVEntryBO> frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();
        try{
            frmuventryBOResp = frmuventryService.cmdselfundclick(frmuventryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdselfundclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdselfundclick()and return : "+frmuventryBOResp);
        return frmuventryBOResp;
    }
}