package com.sic.tasa.rest;


import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.sic.tasa.dataobject.FrmDivdMaintBO;
import com.sic.tasa.exceptions.TASARESTException;
import com.sic.tasa.service.IFrmDivdMaintService;
import com.sic.tasa.util.AtmaLogger;


/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@Controller
@RequestMapping(value = "/FrmDivdMaintController")
public class FrmDivdMaintController {

    private static AtmaLogger LOGGER = AtmaLogger.create(FrmDivdMaintController.class.getName());

		@Autowired
		private IFrmDivdMaintService frmdivdmaintService;

		public void setFrmDivdMaintService(IFrmDivdMaintService frmdivdmaintService) {
		    this.frmdivdmaintService = frmdivdmaintService;
		}


    /*
     * Method cboesttypecdclick
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cboesttypecdclick" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> cboesttypecdclick(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cboesttypecdclick and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.cboesttypecdclick(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cboesttypecdclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cboesttypecdclick()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method cbofundsclick
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cbofundsclick" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> cbofundsclick(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cbofundsclick and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.cbofundsclick(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cbofundsclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cbofundsclick()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method cmdclearclick
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdclearclick" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> cmdclearclick(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdclearclick and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.cmdclearclick(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdclearclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdclearclick()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method cmdcloseclick
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdcloseclick" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> cmdcloseclick(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdcloseclick and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.cmdcloseclick(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdcloseclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdcloseclick()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method cmdcomputenavclick
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdcomputenavclick" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> cmdcomputenavclick(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdcomputenavclick and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.cmdcomputenavclick(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdcomputenavclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdcomputenavclick()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method cmdrefreshclick
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdrefreshclick" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> cmdrefreshclick(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdrefreshclick and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.cmdrefreshclick(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdrefreshclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdrefreshclick()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method cmdsaveclick
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdsaveclick" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> cmdsaveclick(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdsaveclick and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.cmdsaveclick(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdsaveclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdsaveclick()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method cmdselectfundclick
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdselectfundclick" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> cmdselectfundclick(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdselectfundclick and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.cmdselectfundclick(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdselectfundclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdselectfundclick()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method dtpactreinvesteddatechange
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/dtpactreinvesteddatechange" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> dtpactreinvesteddatechange(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: dtpactreinvesteddatechange and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.dtpactreinvesteddatechange(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: dtpactreinvesteddatechange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: dtpactreinvesteddatechange()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method dtpexdatechange
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/dtpexdatechange" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> dtpexdatechange(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: dtpexdatechange and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.dtpexdatechange(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: dtpexdatechange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: dtpexdatechange()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method formload
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formload" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> formload(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: formload and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.formload(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formload and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formload()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method formunload
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formunload" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> formunload(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: formunload and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.formunload(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formunload and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formunload()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method lvwdividenditemclick
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/lvwdividenditemclick" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> lvwdividenditemclick(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: lvwdividenditemclick and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.lvwdividenditemclick(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: lvwdividenditemclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: lvwdividenditemclick()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactdollarschange
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactdollarschange" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactdollarschange(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactdollarschange and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactdollarschange(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactdollarschange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactdollarschange()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactdollarsgotfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactdollarsgotfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactdollarsgotfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactdollarsgotfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactdollarsgotfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactdollarsgotfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactdollarsgotfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactdollarskeypress
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactdollarskeypress" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactdollarskeypress(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactdollarskeypress and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactdollarskeypress(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactdollarskeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactdollarskeypress()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactdollarslostfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactdollarslostfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactdollarslostfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactdollarslostfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactdollarslostfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactdollarslostfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactdollarslostfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactrategotfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactrategotfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactrategotfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactrategotfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactrategotfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactrategotfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactrategotfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactratekeypress
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactratekeypress" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactratekeypress(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactratekeypress and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactratekeypress(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactratekeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactratekeypress()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactratelostfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactratelostfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactratelostfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactratelostfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactratelostfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactratelostfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactratelostfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactshareschange
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactshareschange" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactshareschange(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactshareschange and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactshareschange(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactshareschange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactshareschange()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactsharesgotfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactsharesgotfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactsharesgotfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactsharesgotfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactsharesgotfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactsharesgotfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactsharesgotfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactshareskeypress
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactshareskeypress" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactshareskeypress(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactshareskeypress and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactshareskeypress(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactshareskeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactshareskeypress()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtactshareslostfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtactshareslostfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtactshareslostfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtactshareslostfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtactshareslostfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtactshareslostfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtactshareslostfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtestratechange
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtestratechange" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtestratechange(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtestratechange and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtestratechange(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtestratechange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtestratechange()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtestrategotfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtestrategotfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtestrategotfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtestrategotfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtestrategotfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtestrategotfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtestrategotfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtestratekeypress
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtestratekeypress" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtestratekeypress(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtestratekeypress and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtestratekeypress(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtestratekeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtestratekeypress()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtestratelostfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtestratelostfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtestratelostfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtestratelostfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtestratelostfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtestratelostfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtestratelostfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtnavauditedchange
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtnavauditedchange" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtnavauditedchange(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtnavauditedchange and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtnavauditedchange(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtnavauditedchange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtnavauditedchange()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtnavauditedgotfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtnavauditedgotfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtnavauditedgotfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtnavauditedgotfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtnavauditedgotfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtnavauditedgotfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtnavauditedgotfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtnavauditedkeypress
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtnavauditedkeypress" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtnavauditedkeypress(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtnavauditedkeypress and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtnavauditedkeypress(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtnavauditedkeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtnavauditedkeypress()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
    /*
     * Method txtnavauditedlostfocus
     * @param frmdivdmaintBOReq
     * @return frmdivdmaintBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtnavauditedlostfocus" , method = RequestMethod.POST)
    public List<FrmDivdMaintBO> txtnavauditedlostfocus(FrmDivdMaintBO frmdivdmaintBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtnavauditedlostfocus and argument : "+frmdivdmaintBOReq); 
        List<FrmDivdMaintBO> frmdivdmaintBOResp =  new ArrayList<FrmDivdMaintBO>();
        try{
            frmdivdmaintBOResp = frmdivdmaintService.txtnavauditedlostfocus(frmdivdmaintBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtnavauditedlostfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtnavauditedlostfocus()and return : "+frmdivdmaintBOResp);
        return frmdivdmaintBOResp;
    }
}