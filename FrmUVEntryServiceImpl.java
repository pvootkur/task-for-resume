package com.sic.tasa.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sic.tasa.dataobject.FrmUVEntryBO;
import com.sic.tasa.exceptions.TASABusinessException;
import com.sic.tasa.repositories.IFrmUVEntryRepository;
import com.sic.tasa.service.IFrmUVEntryService;
import com.sic.tasa.util.AtmaLogger;

/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :  


@Service
public class FrmUVEntryServiceImpl implements  IFrmUVEntryService{

    private static final AtmaLogger LOGGER = AtmaLogger.create(FrmUVEntryServiceImpl.class);

    @Autowired
    private IFrmUVEntryRepository frmuventryRepository;

    public void setFrmUVEntryRepository(IFrmUVEntryRepository frmuventryRepository) {
        this.frmuventryRepository = frmuventryRepository;
    }


  //  populate contract
	/**
	 * Method populatecontract
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmUVEntryBO> populatecontract() throws TASABusinessException{
	      LOGGER.debug("Entering into the method: populatecontract()"); 
	      List<FrmUVEntryBO> frmuventryBOResp = null;
	      try{
	    	  frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
	    	  frmuventryBOResp = frmuventryRepository.populatecontract1();
	    	  //TODO Handle in repository itself
//	    	  i=1;
//	    	  do{
//	    		  if(rs("Legal_Plan_nm") != ""){
//	    			  cboplanname(.getAdditemRs().getFields("legalPlanNm"));
//	    		  }
//	    	  } else{
//	    		  cboplanname(.AddItem "No name found");
//	    	  }
//	    	  rs(.getMovenext());
//	    	  i=i + 1;
	      }catch (Exception ex){
            LOGGER.error("Error occurred in method: populatecontract()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: populatecontract()"+"return : "+frmuventryBOResp);
        return frmuventryBOResp;
        }
  //  Todays date as of date
	/**
	 * Method asofdatetoday
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
 // TODO Handle in Angular - Date format in UI Screen
//    public List<FrmUVEntryBO> asofdatetoday(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: asofdatetoday()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	          frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//  //  if the environment is not prod, show the date as the property set
//  //  in rp_property_set table TASA_test_date
//    if(VBUtilFunctions.toUpper(OracleEnv) != "SFGP"){
//        me.txtTodayDate=format()(DateForModel, "mm/dd/yyyy");
//		}
//   } else{
//        me.txtTodayDate=format()(Now(), "mm/dd/yyyy");
//		}
//        }catch (Exception ex){
//            LOGGER.error("Error occurred in method: asofdatetoday()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: asofdatetoday()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }
  //  populate funds from RP_RPD_FUND
	/**
	 * Method populatefunds
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmUVEntryBO> populatefunds(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: populatefunds()"+"argument : "+frmuventryBOReq); 
	      List<FrmUVEntryBO> frmuventryBOResp = null;
	      try{
	    	  frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
	    	  //  funds from which table?
	    	  //  1. RP_RPD_FUND
	    	  //  2.RP_PSRPD_FUND
	    	  //  3.RP_CSRPD_FUND
	    	  //  4.RP_CONTRACT
	    	  frmuventryBOResp = frmuventryRepository.populatefunds1(frmuventryBOReq);
	    	//TODO Handle in repository itself
	    	  //        i=0;
	    	  //    cbofund(.getClear());
	    	  //    do{
	    	  //    cbofund(.getAdditemRs!descp());
	    	  //        cboFund.ItemData(i)=rs!RP_CPSRPD_FUND_SEQ;
	    	  //        i=i + 1;
	    	  //    rs(.getMovenext());
	      }catch (Exception ex){
            LOGGER.error("Error occurred in method: populatefunds()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: populatefunds()"+"return : "+frmuventryBOResp);
        return frmuventryBOResp;
        }
  //  if a decimal point already exists in the unit value override text box, return true
	/**
	 * Method decimalpointexist
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    //TODO Handle in UI 
//    public List<FrmUVEntryBO> decimalpointexist(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: decimalpointexist()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	    	  frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//	    	  	    	  Integer i;
//	    	  	    	  Integer lenUVoverride;
//	    	  	    	  decimalPointExist=false;
//	    	  	    	  i=1;
//	    	  	    	  lenUVoverride=VBUtilFunctions.length(VBUtilFunctions.trim(uvOverride));
//	    	      do{
//	    	      if(VBUtilFunctions.mid(uvOverride, i, 1) == "."){
//	    	          decimalPointExist=true;
//	    	  		}
//	    	      }while();
//	      }catch (Exception ex){
//            LOGGER.error("Error occurred in method: decimalpointexist()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: decimalpointexist()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }
  //  enable/disable unit value override
	/**
	 * Method enabledisable
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    //TODO handle in Angular - enable/disable fields
//    public List<FrmUVEntryBO> enabledisable(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: enabledisable()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	          frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//        me.txtReEnterUVOverride="";
//        me.txtUVOverride="";
//        Me.lblUVOverride=bEnable;
//        Me.lblReEnterUVoverride=bEnable;
//        Me.txtReEnterUVOverride=bEnable;
//        Me.txtUVOverride=bEnable;
//        }catch (Exception ex){
//            LOGGER.error("Error occurred in method: enabledisable()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: enabledisable()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }
  //  when clicking a contract the fund names corresponding to the
  //  contract will be populated and the contractname will display below the combo box
	/**
	 * Method cbocontractclick
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmUVEntryBO> cbocontractclick(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cbocontractclick()"+"argument : "+frmuventryBOReq); 
	      List<FrmUVEntryBO> frmuventryBOResp = null;
	      try{
	    	  frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
	    	  //        me.lblContractName=cboPlanName.List(cboContract.ListIndex);
	    	  populatefunds(frmuventryBOReq);
	    	  //    if(Me.cboFund.Text == ""){
	    	  //        cmdSelFund=false;
	    	  //		}
	    	  //   } else{
	    	  //        cmdSelFund=true;
	    	  //		}
	    	  //    enabledisable(false);
	    	  //    MsgBox("Error in cboContract_click. " & Err.Description, vbExclamation);
	      }catch (Exception ex){
            LOGGER.error("Error occurred in method: cbocontractclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cbocontractclick()"+"return : "+frmuventryBOResp);
        return frmuventryBOResp;
        }
	/**
	 * Method cbofundclick
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    //TODO Handle in Angular - enable/disable fields
//    public List<FrmUVEntryBO> cbofundclick(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: cbofundclick()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	          frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//    if(cboFund.Text != ""){
//        cmdSelFund=true;
//    enabledisable(false);
//		}
//        }catch (Exception ex){
//            LOGGER.error("Error occurred in method: cbofundclick()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: cbofundclick()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }
  //  adds/updates unit value override
	/**
	 * Method cmdaddmodifyclick
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmUVEntryBO> cmdaddmodifyclick1(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cmdaddmodifyclick1()"+"argument : "+frmuventryBOReq); 
	      List<FrmUVEntryBO> frmuventryBOResp = null;
	      try{
	    	  frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
	    	  frmuventryBOResp = frmuventryRepository.cmdaddmodifyClick1(frmuventryBOReq);
	      }catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdaddmodifyclick1()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cmdaddmodifyclick()"+"return : "+frmuventryBOResp);
        return frmuventryBOResp;
        }
    /**
	 * Method cmdaddmodifyclick
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmUVEntryBO> cmdaddmodifyclick2(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cmdaddmodifyclick2()"+"argument : "+frmuventryBOReq); 
	      List<FrmUVEntryBO> frmuventryBOResp = null;
	      try{
	    	  frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
	    	  frmuventryBOResp = frmuventryRepository.cmdaddmodifyClick2(frmuventryBOReq);
	      }catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdaddmodifyclick2()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cmdaddmodifyclick()"+"return : "+frmuventryBOResp);
        return frmuventryBOResp;
        }
  //  closes the window
	/**
	 * Method cmdcloseclick
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
//    public List<FrmUVEntryBO> cmdcloseclick(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: cmdcloseclick()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	          frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//        }catch (Exception ex){
//            LOGGER.error("Error occurred in method: cmdcloseclick()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: cmdcloseclick()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }
  //  delete the unit value override
	/**
	 * Method cmddeleteclick
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmUVEntryBO> cmddeleteclick(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cmddeleteclick()"+"argument : "+frmuventryBOReq); 
	      List<FrmUVEntryBO> frmuventryBOResp = null;
	      try{
	    	  frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
	    	  //TODO Handle in Angualr - Confirm box
	    	  //        iAnswer=MsgBox("Are you sure you want to delete the unit value override?", vbQuestion + vbOKCancel);
	    	  //    if(iAnswer == vbOK){
	    	  frmuventryBOResp = frmuventryRepository.cmddeleteClick1(frmuventryBOReq);
	    	  //    cn(.getExecuteStrsql() ,irecaffected);
	    	  //    if(iRecAffected < 1){
	    	  //    MsgBox("Error in deleting the record!", vbInformation);
	    	  //    txtuvoverride(.getSetfocus());
	    	  //		}
	    	  //        txtUVOverride="";
	    	  //        me.txtReEnterUVOverride="";
	    	  //        cmdAddModify="ADD";
	    	  //        cmdDelete=false;
	    	  //		}
	    	  //    MsgBox("Error in cmdDelete_Click. " & Err.Description, vbExclamation);
	      }catch (Exception ex){
            LOGGER.error("Error occurred in method: cmddeleteclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cmddeleteclick()"+"return : "+frmuventryBOResp);
        return frmuventryBOResp;
        }
  //  if a unit value override exists add that to the unit value override text box
	/**
	 * Method cmdselfundclick
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmUVEntryBO> cmdselfundclick(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cmdselfundclick()"+"argument : "+frmuventryBOReq); 
	      List<FrmUVEntryBO> frmuventryBOResp = null;
	      try{
	    	  frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
	    	  //  enable the unit value override text boxes
	    	  //TODO Handle in Angular - Enabling/disabling fields
	    	  //    enabledisable(true);
	    	  //      strSQL = "Select HIST.UNIT_VALUE from RP_CSRPD_FUND_HISTORY HIST, RP_CSRPD_FUND CSRPD, " & _
	    	  //            " RP_PSRPD_FUND PSRPD, RP_RPD_FUND RPD where RPD.RP_RPD_FUND_SEQ = " & _
	    	  //            cboFund.ItemData(cboFund.ListIndex) & " and RPD.RP_RPD_FUND_SEQ = " & _
	    	  //            " PSRPD.RP_RPD_FUND_SEQ and PSRPD.RP_PSRPD_FUND_SEQ = CSRPD.RP_PSRPD_FUND_SEQ " & _
	    	  //            " and CSRPD.RP_CSRPD_FUND_SEQ = HIST.RP_CSRPD_FUND_SEQ "
	    	  frmuventryBOResp = frmuventryRepository.cmdselfundClick1(frmuventryBOReq);
	    	  //    if(! rs.EOF){
	    	  //        me.txtUVOverride=rs!UNIT_VALUE;
	    	  //        me.mUnitVal=rs!UNIT_VALUE;
	    	  //        cmdDelete=true;
	    	  //        cmdAddModify="MODIFY";
	    	  //		}
	    	  //   } else{
	    	  //        me.txtReEnterUVOverride="";
	    	  //        me.txtUVOverride="";
	    	  //        cmdAddModify="ADD";
	    	  //        cmdAddModify=true;
	    	  //		}
	    	  //    MsgBox("Error in cmdSelFund_Click. " & Err.Description, vbExclamation);
	      }catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdselfundclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cmdselfundclick()"+"return : "+frmuventryBOResp);
        return frmuventryBOResp;
        }
	/**
	 * Method formload
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
//    public List<FrmUVEntryBO> formload() throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: formload()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	    	  frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//	    	  populatecontract(frmuventryBOReq);
//	    	  //	    	  asofdatetoday(frmuventryBOReq);
//	    	  //  disable the UV entry fields
//	    	  //        Me.lblUVOverride=false;
//	    	  //        Me.lblReEnterUVoverride=false;
//	    	  //        Me.txtUVOverride=false;
//	    	  //        Me.txtReEnterUVOverride=false;
//	    	  //        Me.cmdAddModify=false;
//	    	  //        cmdDelete=false;
//	    	  //        Me.cmdSelFund=false;
//	    	  //    MsgBox("Error in Form_Load. " & Err.Description, vbExclamation);
//	      }catch (Exception ex){
//            LOGGER.error("Error occurred in method: formload()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: formload()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }
	/**
	 * Method txtreenteruvoverridechange
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    //TODO Handle in Angular - override changes
//    public List<FrmUVEntryBO> txtreenteruvoverridechange(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: txtreenteruvoverridechange()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	          frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//    if(Me.txtUVOverride.Text != "" && Me.txtReEnterUVOverride.Text != ""){
//        cmdAddModify=true;
//		}
//        }catch (Exception ex){
//            LOGGER.error("Error occurred in method: txtreenteruvoverridechange()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: txtreenteruvoverridechange()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }
  //  Only allow numeric entry
	/**
	 * Method txtreenteruvoverridekeypress
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
  //TODO Handle in Angular - check for numeric values
//    public List<FrmUVEntryBO> txtreenteruvoverridekeypress(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: txtreenteruvoverridekeypress()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	          frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//  //  48-57 are 0-9, 46 is 0 and 8 is backspace key
//    if((KeyAscii < 48 Or KeyAscii > 57) && KeyAscii != 46 && KeyAscii != 8){
//    MsgBox("Numbers 0 to 9  and Decimal point only, please!", vbExclamation + vbOKOnly, "Input Error");
//        keyAscii=0;
//		}
//  //  make sure the user doesnt enter more than one decimal point
//    if(KeyAscii == 46){
//    if(DecimalPointExist(txtReEnterUVOverride.Text)){
//    MsgBox("Cannot enter more than one decimal point, Unit value override should be a numeric value!", vbExclamation + vbOKOnly, "Input Error");
//        keyAscii=0;
//		}
//		}
//        }catch (Exception ex){
//            LOGGER.error("Error occurred in method: txtreenteruvoverridekeypress()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: txtreenteruvoverridekeypress()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }
	/**
	 * Method txtuvoverridechange
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
    //TODO Handle in Angular - value change in fields
//    public List<FrmUVEntryBO> txtuvoverridechange(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: txtuvoverridechange()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	          frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//    if(Me.txtUVOverride.Text != "" && Me.txtReEnterUVOverride.Text != ""){
//        cmdAddModify=true;
//		}
//    if(Me.txtUVOverride.Text == ""){
//        cmdDelete=false;
//		}
//        }catch (Exception ex){
//            LOGGER.error("Error occurred in method: txtuvoverridechange()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: txtuvoverridechange()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }
  //  only allow to enter numeric values(0-9, decimal point and backspace key press)
	/**
	 * Method txtuvoverridekeypress
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASABusinessException
	 */
  //TODO Handle in Angular - check for numeric values
//    public List<FrmUVEntryBO> txtuvoverridekeypress(FrmUVEntryBO frmuventryBOReq) throws TASABusinessException{
//	      LOGGER.debug("Entering into the method: txtuvoverridekeypress()"+"argument : "+frmuventryBOReq); 
//	      List<FrmUVEntryBO> frmuventryBOResp = null;
//	      try{
//	          frmuventryBOResp =  new ArrayList<FrmUVEntryBO>();   
//  //  48-57 are 0-9, 46 is 0 and 8 is backspace key
//    if((KeyAscii < 48 Or KeyAscii > 57) && KeyAscii != 46 && KeyAscii != 8){
//    MsgBox("Numbers 0 to 9  and Decimal point only, please!", vbExclamation + vbOKOnly, "Input Error");
//        keyAscii=0;
//		}
//  //  make sure the user doesnt enter more than one decimal point
//    if(KeyAscii == 46){
//    if(DecimalPointExist(txtUVOverride.Text)){
//    MsgBox("Cannot enter more than one decimal point, Unit value override should be a numeric value!", vbExclamation + vbOKOnly, "Input Error");
//        keyAscii=0;
//		}
//		}
//        }catch (Exception ex){
//            LOGGER.error("Error occurred in method: txtuvoverridekeypress()"+"and terminated due to " + ex.getMessage());
//            throw new TASABusinessException(ex);
//        }
//        LOGGER.debug("Exiting the method: txtuvoverridekeypress()"+"return : "+frmuventryBOResp);
//        return frmuventryBOResp;
//        }

}