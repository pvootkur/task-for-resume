package com.sic.tasa.rest;


import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.sic.tasa.dataobject.FrmGLAccountBO;
import com.sic.tasa.exceptions.TASARESTException;
import com.sic.tasa.service.IFrmGLAccountService;
import com.sic.tasa.util.AtmaLogger;


/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@RestController
@RequestMapping(value = "/FrmGLAccountController")
public class FrmGLAccountController {
	private static final AtmaLogger LOGGER = AtmaLogger.create(FrmGLAccountController.class.getName());

		@Autowired		
		private  IFrmGLAccountService frmglaccountService;

		public void setFrmGLAccountService(IFrmGLAccountService frmglaccountService) {
		    this.frmglaccountService = frmglaccountService;
		}


    /*
     * Method adodcerror
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/adodcerror" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> adodcerror(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: adodcerror and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.adodcerror(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: adodcerror and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: adodcerror()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method cmdcloseclick
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdcloseclick" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> cmdcloseclick(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdcloseclick and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.cmdcloseclick(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdcloseclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdcloseclick()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method cmdinsertclick
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdinsertclick" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> cmdinsertclick(@RequestBody List<FrmGLAccountBO> frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdinsertclick and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            frmglaccountBOResp = frmglaccountService.cmdinsertclick(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdinsertclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdinsertclick()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method cmdsaveclick
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdsaveclick" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> cmdsaveclick(@RequestBody List<FrmGLAccountBO> frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdsaveclick and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            frmglaccountBOResp = frmglaccountService.cmdsaveclick(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdsaveclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdsaveclick()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method validaterecord
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/validaterecord" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> validaterecord(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: validaterecord and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.validaterecord(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: validaterecord and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: validaterecord()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method cmdqueryclick
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdqueryclick" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> cmdqueryclick(@RequestBody FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdqueryclick and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            frmglaccountBOResp = frmglaccountService.cmdqueryclick(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdqueryclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdqueryclick()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method cmdrefreshclick
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdrefreshclick" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> cmdrefreshclick(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdrefreshclick and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.cmdrefreshclick(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdrefreshclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdrefreshclick()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method datagridafterupdate
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/datagridafterupdate" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> datagridafterupdate(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: datagridafterupdate and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.datagridafterupdate(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: datagridafterupdate and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: datagridafterupdate()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method datagridbeforecolupdate
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/datagridbeforecolupdate" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> datagridbeforecolupdate(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: datagridbeforecolupdate and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.datagridbeforecolupdate(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: datagridbeforecolupdate and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: datagridbeforecolupdate()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method datagridbeforeupdate
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/datagridbeforeupdate" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> datagridbeforeupdate(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: datagridbeforeupdate and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.datagridbeforeupdate(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: datagridbeforeupdate and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: datagridbeforeupdate()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method datagriderror
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/datagriderror" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> datagriderror(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: datagriderror and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.datagriderror(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: datagriderror and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: datagriderror()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method datagridkeypress
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/datagridkeypress" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> datagridkeypress(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: datagridkeypress and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.datagridkeypress(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: datagridkeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: datagridkeypress()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method datagridonaddnew
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/datagridonaddnew" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> datagridonaddnew(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: datagridonaddnew and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.datagridonaddnew(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: datagridonaddnew and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: datagridonaddnew()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method datagridrowcolchange
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/datagridrowcolchange" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> datagridrowcolchange(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: datagridrowcolchange and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.datagridrowcolchange(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: datagridrowcolchange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: datagridrowcolchange()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method formactivate
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formactivate" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> formactivate(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: formactivate and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.formactivate(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formactivate and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formactivate()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method formload
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formload" , method = RequestMethod.GET)
    @ResponseBody
    public List<FrmGLAccountBO> formload() throws TASARESTException{    
        LOGGER.debug("Entering into the method: formload and argument : "); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
             frmglaccountBOResp = frmglaccountService.formload();
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formload and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formload()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method formatdatagrid
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formatdatagrid" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> formatdatagrid(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: formatdatagrid and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.formatdatagrid(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formatdatagrid and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formatdatagrid()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method mnufileexitclick
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/mnufileexitclick" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> mnufileexitclick(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: mnufileexitclick and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.mnufileexitclick(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: mnufileexitclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: mnufileexitclick()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method formresize
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formresize" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> formresize(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: formresize and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.formresize(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formresize and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formresize()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method formunload
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formunload" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> formunload(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: formunload and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.formunload(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formunload and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formunload()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtachange
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtachange" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtachange(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtachange and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtachange(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtachange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtachange()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtavalidate
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtavalidate" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtavalidate(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtavalidate and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtavalidate(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtavalidate and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtavalidate()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtbvalidate
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtbvalidate" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtbvalidate(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtbvalidate and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtbvalidate(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtbvalidate and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtbvalidate()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtcvalidate
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtcvalidate" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtcvalidate(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtcvalidate and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtcvalidate(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtcvalidate and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtcvalidate()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtbchange
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtbchange" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtbchange(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtbchange and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtbchange(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtbchange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtbchange()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtcchange
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtcchange" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtcchange(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtcchange and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtcchange(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtcchange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtcchange()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtdchange
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtdchange" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtdchange(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtdchange and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtdchange(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtdchange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtdchange()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtsequencegotfocus
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtsequencegotfocus" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtsequencegotfocus(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtsequencegotfocus and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtsequencegotfocus(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtsequencegotfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtsequencegotfocus()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtsequencekeypress
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtsequencekeypress" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtsequencekeypress(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtsequencekeypress and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtsequencekeypress(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtsequencekeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtsequencekeypress()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtupdatedgotfocus
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtupdatedgotfocus" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtupdatedgotfocus(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtupdatedgotfocus and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtupdatedgotfocus(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtupdatedgotfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtupdatedgotfocus()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtupdatedkeypress
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtupdatedkeypress" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtupdatedkeypress(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtupdatedkeypress and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtupdatedkeypress(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtupdatedkeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtupdatedkeypress()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtupdatedategotfocus
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtupdatedategotfocus" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtupdatedategotfocus(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtupdatedategotfocus and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtupdatedategotfocus(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtupdatedategotfocus and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtupdatedategotfocus()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
    /*
     * Method txtupdatedatekeypress
     * @param frmglaccountBOReq
     * @return frmglaccountBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtupdatedatekeypress" , method = RequestMethod.POST)
    public List<FrmGLAccountBO> txtupdatedatekeypress(FrmGLAccountBO frmglaccountBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtupdatedatekeypress and argument : "+frmglaccountBOReq); 
        List<FrmGLAccountBO> frmglaccountBOResp =  new ArrayList<FrmGLAccountBO>();
        try{
            //frmglaccountBOResp = frmglaccountService.txtupdatedatekeypress(frmglaccountBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtupdatedatekeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtupdatedatekeypress()and return : "+frmglaccountBOResp);
        return frmglaccountBOResp;
    }
}