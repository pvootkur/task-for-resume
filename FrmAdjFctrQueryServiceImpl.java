package com.sic.tasa.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sic.tasa.dataobject.FrmAdjFctrQueryBO;
import com.sic.tasa.exceptions.TASABusinessException;
import com.sic.tasa.repositories.IFrmAdjFctrQueryRepository;
import com.sic.tasa.service.IFrmAdjFctrQueryService;
import com.sic.tasa.util.AtmaLogger;

/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :  


@Service
public class FrmAdjFctrQueryServiceImpl implements  IFrmAdjFctrQueryService{

    private static final AtmaLogger LOGGER = AtmaLogger.create(FrmAdjFctrQueryServiceImpl.class);

    @Autowired
    private IFrmAdjFctrQueryRepository frmadjfctrqueryRepository;

    public void setFrmAdjFctrQueryRepository(IFrmAdjFctrQueryRepository frmadjfctrqueryRepository) {
        this.frmadjfctrqueryRepository = frmadjfctrqueryRepository;
    }


	/**
	 * Method cbofundsclick
	 * @param frmadjfctrqueryBOReq
	 * @return frmadjfctrqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmAdjFctrQueryBO> cbofundsclick(FrmAdjFctrQueryBO frmadjfctrqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cbofundsclick()"+"argument : "+frmadjfctrqueryBOReq); 
	      List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp = null;
	      try{
	          frmadjfctrqueryBOResp = frmadjfctrqueryRepository.cbofundsClick1(frmadjfctrqueryBOReq);
	          
	          String strSQL;
	          /*
//ADODB.Recordset rstAdjFactor;
//ListItem itmFunds;
//Integer intI;
  //   since all history for adjustment factors will be displayed,
  //   as soon as a fund is selected from the combo box, go read the data
  //   set the hidden MIP Seq combo box to the same value as the fund that
  //   was selected
        .cboMIPSeq.ListIndex=.cboFunds.ListIndex;
frmadjfctrqueryBOResp = frmadjfctrqueryRepository.cbofundsClick1(frmadjfctrqueryBOReq);
        .txtComment="";
  //   populate the listview with the adjustment factors for the selected fund
    while(rstAdjFactor.EOF){
        intI=intI + 1;
        itmFunds.SubItems(1)=rstAdjFactor!adjustment_rt;
        itmFunds.SubItems(2)=rstAdjFactor!uv_adjust_reason_type_cd;
    if(==Null(rstAdjFactor!comment_txt)){
		}
   } else{
        itmFunds.SubItems(3)=rstAdjFactor!comment_txt;
  //   populate the comment text box with the comment for the
  //   first record retrieved
    if(intI == 1){
        .txtComment=rstAdjFactor!comment_txt;
		}
		}
        itmFunds.SubItems(4)=rstAdjFactor!rp_mip_seq;
    rstadjfactor(.getMovenext());
		}
    if(.lvwFunds.ListItems.Count > 0){
        .lvwFunds.SelectedItem.Selected=true;
		}
    rstadjfactor(.getClose());
    */
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: cbofundsclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cbofundsclick()"+"return : "+frmadjfctrqueryBOResp);
        return frmadjfctrqueryBOResp;
        }
	/**
	 * Method cmdcloseclick
	 * @param frmadjfctrqueryBOReq
	 * @return frmadjfctrqueryBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmAdjFctrQueryBO> cmdcloseclick(
			FrmAdjFctrQueryBO frmadjfctrqueryBOReq)
					throws TASABusinessException {
		LOGGER.debug("Entering into the method: cmdcloseclick()"
				+ "argument : " + frmadjfctrqueryBOReq);
		List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp = null;
		try {
			frmadjfctrqueryBOResp = new ArrayList<FrmAdjFctrQueryBO>();
		} catch (Exception ex) {
			LOGGER.error("Error occurred in method: cmdcloseclick()"
					+ "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: cmdcloseclick()" + "return : "
				+ frmadjfctrqueryBOResp);
		return frmadjfctrqueryBOResp;
	}
	/**
	 * Method cmdshowcommentsclick
	 * @param frmadjfctrqueryBOReq
	 * @return frmadjfctrqueryBOResp
	 * @throws TASABusinessException
	 */
	
	
    public List<FrmAdjFctrQueryBO> cmdshowcommentsclick(FrmAdjFctrQueryBO frmadjfctrqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cmdshowcommentsclick()"+"argument : "+frmadjfctrqueryBOReq); 
	      List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp = null;
	      try{
	          frmadjfctrqueryBOResp =  new ArrayList<FrmAdjFctrQueryBO>(); 
	     //     TODO Handle in Angular
//        setFundName=cboFunds.Text;
//        .txtCommentArea=txtComment.Text;
  //   this is a history screen.  Do not allow the user to save the comment from
  //   the comments form and expect it to be updated on this screen
//        .cmdOK=false;
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdshowcommentsclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cmdshowcommentsclick()"+"return : "+frmadjfctrqueryBOResp);
        return frmadjfctrqueryBOResp;
        }
	/**
	 * Method formload
	 * @param frmadjfctrqueryBOReq
	 * @return frmadjfctrqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmAdjFctrQueryBO> formload(FrmAdjFctrQueryBO frmadjfctrqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: formload()"+"argument : "+frmadjfctrqueryBOReq); 
	      List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp = null;
	      try{
	          frmadjfctrqueryBOResp =  new ArrayList<FrmAdjFctrQueryBO>();
	          frmadjfctrqueryBOResp = frmadjfctrqueryRepository.formLoad1(frmadjfctrqueryBOReq);
	          
String strSQL;
//ADODB.Recordset rstFunds;
  //   populate the combo box that has the list of fund names
  //   as well as a hidden combo box that has the MIP Seq corresponding to the
  //   fund names that are displayed for the user to choose from
//    while(rstFunds.EOF){
//    rstfunds(.getMovenext());
//		}
//    rstfunds(.getClose());
//    MsgBox(Err.Description);
//    */
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: formload()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: formload()"+"return : "+frmadjfctrqueryBOResp);
        return frmadjfctrqueryBOResp;
        }
	/**
	 * Method lvwfundsitemclick
	 * @param frmadjfctrqueryBOReq
	 * @return frmadjfctrqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmAdjFctrQueryBO> lvwfundsitemclick(FrmAdjFctrQueryBO frmadjfctrqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: lvwfundsitemclick()"+"argument : "+frmadjfctrqueryBOReq); 
	      List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp = null;
	      try{
	          frmadjfctrqueryBOResp =  new ArrayList<FrmAdjFctrQueryBO>();   
  //   display the full text of the comment of the item that is selected
  //   from the listview
   //     txtComment=lvwFunds.SelectedItem.SubItems(3);
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: lvwfundsitemclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: lvwfundsitemclick()"+"return : "+frmadjfctrqueryBOResp);
        return frmadjfctrqueryBOResp;
        }

}