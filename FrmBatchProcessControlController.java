package com.sic.tasa.rest;


import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.sic.tasa.dataobject.FrmBatchProcessControlBO;
import com.sic.tasa.exceptions.TASARESTException;
import com.sic.tasa.service.IFrmBatchProcessControlService;
import com.sic.tasa.util.AtmaLogger;


/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@RestController
@RequestMapping(value = "/FrmBatchProcessControlController")
public class FrmBatchProcessControlController {

	private static final AtmaLogger LOGGER = AtmaLogger.create(FrmBatchProcessControlController.class.getName());

		@Autowired
		private IFrmBatchProcessControlService frmbatchprocesscontrolService;

		public void setFrmBatchProcessControlService(IFrmBatchProcessControlService frmbatchprocesscontrolService) {
		    this.frmbatchprocesscontrolService = frmbatchprocesscontrolService;
		}


    /*
     * Method cmdqueryclick
     * @param frmbatchprocesscontrolBOReq
     * @return frmbatchprocesscontrolBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdqueryclick" , method = RequestMethod.POST)
    public List<FrmBatchProcessControlBO> cmdqueryclick(@RequestBody FrmBatchProcessControlBO frmbatchprocesscontrolBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdqueryclick and argument : "+frmbatchprocesscontrolBOReq); 
        List<FrmBatchProcessControlBO> frmbatchprocesscontrolBOResp =  new ArrayList<FrmBatchProcessControlBO>();
        try{
            frmbatchprocesscontrolBOResp = frmbatchprocesscontrolService.cmdqueryclick(frmbatchprocesscontrolBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdqueryclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdqueryclick()and return : "+frmbatchprocesscontrolBOResp);
        return frmbatchprocesscontrolBOResp;
    }
    
    /*
     * Method formload
     * @param frmbatchprocesscontrolBOReq
     * @return frmbatchprocesscontrolBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formload" , method = RequestMethod.GET)
    @ResponseBody
    public List<FrmBatchProcessControlBO> formload() throws TASARESTException{    
        LOGGER.debug("Entering into the method: formload and argument : "); 
        List<FrmBatchProcessControlBO> frmbatchprocesscontrolBOResp =  new ArrayList<FrmBatchProcessControlBO>();
        try{
             frmbatchprocesscontrolBOResp = frmbatchprocesscontrolService.formload();
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formload and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formload()and return : "+frmbatchprocesscontrolBOResp);
        return frmbatchprocesscontrolBOResp;
    }
}