package com.sic.tasa.rest;


import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.sic.tasa.dataobject.FrmProductSeriesBO;
import com.sic.tasa.exceptions.TASARESTException;
import com.sic.tasa.service.IFrmProductSeriesService;
import com.sic.tasa.util.AtmaLogger;


/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@RestController
@RequestMapping(value = "/FrmProductSeriesController")
public class FrmProductSeriesController {
	
	
	private static final AtmaLogger LOGGER = AtmaLogger.create(FrmProductSeriesController.class.getName());

		@Autowired
		private IFrmProductSeriesService frmproductseriesService;

		public void setFrmProductSeriesService(IFrmProductSeriesService frmproductseriesService) {
		    this.frmproductseriesService = frmproductseriesService;
		}


    /*
     * Method cboappclick
     * @param frmproductseriesBOReq
     * @return frmproductseriesBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cboappclick" , method = RequestMethod.POST)
    public List<FrmProductSeriesBO> cboappclick(FrmProductSeriesBO frmproductseriesBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cboappclick and argument : "+frmproductseriesBOReq); 
        List<FrmProductSeriesBO> frmproductseriesBOResp =  new ArrayList<FrmProductSeriesBO>();
        try{
             frmproductseriesBOResp = frmproductseriesService.cboappclick(frmproductseriesBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cboappclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cboappclick()and return : "+frmproductseriesBOResp);
        return frmproductseriesBOResp;
    }
    
    /*
     * Method cmdqueryclick
     * @param frmproductseriesBOReq
     * @return frmproductseriesBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdqueryclick" , method = RequestMethod.POST)
    public List<FrmProductSeriesBO> cmdqueryclick(@RequestBody FrmProductSeriesBO frmproductseriesBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdqueryclick and argument : "+frmproductseriesBOReq); 
        List<FrmProductSeriesBO> frmproductseriesBOResp =  new ArrayList<FrmProductSeriesBO>();
        try{
            frmproductseriesBOResp = frmproductseriesService.cmdqueryclick(frmproductseriesBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdqueryclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdqueryclick()and return : "+frmproductseriesBOResp);
        return frmproductseriesBOResp;
    }
    
    /*
     * Method formload
     * @param frmproductseriesBOReq
     * @return frmproductseriesBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formload" , method = RequestMethod.GET)
    public @ResponseBody List<FrmProductSeriesBO> formload() throws TASARESTException{    
        LOGGER.debug("Entering into the method: formload and argument : "); 
        List<FrmProductSeriesBO> frmproductseriesBOResp =  new ArrayList<FrmProductSeriesBO>();
        try{
            frmproductseriesBOResp = frmproductseriesService.formload();
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formload and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formload()and return : "+frmproductseriesBOResp);
        return frmproductseriesBOResp;
    }
    /*
     * Method txtirmakeypress
     * @param frmproductseriesBOReq
     * @return frmproductseriesBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtirmakeypress" , method = RequestMethod.POST)
    public List<FrmProductSeriesBO> txtirmakeypress(FrmProductSeriesBO frmproductseriesBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtirmakeypress and argument : "+frmproductseriesBOReq); 
        List<FrmProductSeriesBO> frmproductseriesBOResp =  new ArrayList<FrmProductSeriesBO>();
        try{
            //frmproductseriesBOResp = frmproductseriesService.txtirmakeypress(frmproductseriesBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtirmakeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtirmakeypress()and return : "+frmproductseriesBOResp);
        return frmproductseriesBOResp;
    }
    /*
     * Method txtnamekeypress
     * @param frmproductseriesBOReq
     * @return frmproductseriesBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtnamekeypress" , method = RequestMethod.POST)
    public List<FrmProductSeriesBO> txtnamekeypress(FrmProductSeriesBO frmproductseriesBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtnamekeypress and argument : "+frmproductseriesBOReq); 
        List<FrmProductSeriesBO> frmproductseriesBOResp =  new ArrayList<FrmProductSeriesBO>();
        try{
            //frmproductseriesBOResp = frmproductseriesService.txtnamekeypress(frmproductseriesBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtnamekeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtnamekeypress()and return : "+frmproductseriesBOResp);
        return frmproductseriesBOResp;
    }
}