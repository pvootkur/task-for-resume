package com.sic.tasa.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Convert;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sic.tasa.dataobject.FrmRelatedFundsBO;
import com.sic.tasa.exceptions.TASABusinessException;
import com.sic.tasa.repositories.IFrmRelatedFundsRepository;
import com.sic.tasa.service.IFrmRelatedFundsService;
import com.sic.tasa.util.AtmaLogger;

/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :

@Service
public class FrmRelatedFundsServiceImpl implements IFrmRelatedFundsService {

	private static final AtmaLogger LOGGER = AtmaLogger.create(FrmRelatedFundsServiceImpl.class);

	@Autowired
	private IFrmRelatedFundsRepository frmrelatedfundsRepository;

	public void setFrmRelatedFundsRepository(IFrmRelatedFundsRepository frmrelatedfundsRepository) {
		this.frmrelatedfundsRepository = frmrelatedfundsRepository;
	}

	// show all SFG funds
	/**
	 * Method populatesfgfunds
	 * 
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmRelatedFundsBO> populatesfgfunds(FrmRelatedFundsBO frmrelatedfundsBOReq)
			throws TASABusinessException {
		LOGGER.debug("Entering into the method: populatesfgfunds()" + "argument : " + frmrelatedfundsBOReq);
		List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
		try {
			frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
			/*
			 * Recordset rs; String strSQL; Integer i;
			 */
			frmrelatedfundsBOResp = frmrelatedfundsRepository.populatesfgfunds1(frmrelatedfundsBOReq);
			// " and unit_value_calc_type_cd = SAMEDAY ORDER BY full_nm"
			/*
			 * i=0; do{ cbosfgfunds(.getAdditemRs().getFields("fullNm"));
			 * cboSFGFunds.ItemData(i)=rs("rp_mip_seq");
			 * cboeinvstseqsfg(.getAdditemRs().getFields("eInvstInstrumentSeq"));
			 * rs(.getMovenext()); i=i + 1;
			 */
		} catch (Exception ex) {
			LOGGER.error("Error occurred in method: populatesfgfunds()" + "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: populatesfgfunds()" + "return : " + frmrelatedfundsBOResp);
		return frmrelatedfundsBOResp;
	}

	// populate the list view with all related funds
	/**
	 * Method populaterelatedfunds
	 * 
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmRelatedFundsBO> populaterelatedfunds(FrmRelatedFundsBO frmrelatedfundsBOReq)
			throws TASABusinessException {
		LOGGER.debug("Entering into the method: populaterelatedfunds()" + "argument : " + frmrelatedfundsBOReq);
		List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
		try {
			frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
			frmrelatedfundsBOResp = frmrelatedfundsRepository.populaterelatedfunds1(frmrelatedfundsBOReq);
			/*
			 * String strSQL; Recordset rs; Integer i; // related SFG funds // sameday funds
			 * frmrelatedfundsBOResp =
			 * frmrelatedfundsRepository.populaterelatedfunds1(frmrelatedfundsBOReq); //
			 * " and MIP.unit_value_calc_type_cd =SAMEDAY order by priority_nbr asc"
			 * lvrelfunds(.getListitems().getClear()); i=1; do{
			 * lvrelfunds(.getListitems().getAdd() ,cstr(rs.getFields("priorityNbr")));
			 * lvRelFunds.ListItems.Item(i).SubItems(1)=rs("FULL_NM");
			 * lvRelFunds.ListItems.Item(i).SubItems(2)=rs("CUSIP_ID");
			 * lvRelFunds.ListItems.Item(i).SubItems(3)=rs("REL_E_INVSTMNT_INSTRUMENT_SEQ");
			 * lvRelFunds.ListItems.Item(i).SubItems(4)="SFG"; rs(.getMovenext()); i=i + 1;
			 * lvrelfunds(.getRefresh()); rs(.getClose());
			 */
			// related non-SFG funds
			//frmrelatedfundsBOResp = frmrelatedfundsRepository.populaterelatedfunds2(frmrelatedfundsBOReq);
			/*
			 * do{ lvrelfunds(.getListitems().getAdd() ,rs.getFields("priorityNbr"));
			 * lvRelFunds.ListItems.Item(i).SubItems(1)=rs("FUND_NM");
			 * lvRelFunds.ListItems.Item(i).SubItems(2)=rs("CUSIP_ID");
			 * lvRelFunds.ListItems.Item(i).SubItems(3)=rs("RP_NON_SFG_FUND_SEQ");
			 * lvRelFunds.ListItems.Item(i).SubItems(4)="Non SFG"; rs(.getMovenext()); i=i +
			 * 1; lvRelFunds.Sorted=true; lvRelFunds.SortKey=0; lvRelFunds.Sorted=false;
			 */
		} catch (Exception ex) {
			LOGGER.error(
					"Error occurred in method: populaterelatedfunds()" + "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: populaterelatedfunds()" + "return : " + frmrelatedfundsBOResp);
		return frmrelatedfundsBOResp;
	}

	// when user selects a fund to relate to the top SFG fund, select the
	// corresponding flag in the cboSFGNonSFGFlag to distinguish whether
	// SFG or non-SFG
	/**
	 * Method cboallfundsclick
	 * 
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmRelatedFundsBO> cboallfundsclick(FrmRelatedFundsBO frmrelatedfundsBOReq)
			throws TASABusinessException {
		LOGGER.debug("Entering into the method: cboallfundsclick()" + "argument : " + frmrelatedfundsBOReq);
		List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
		try {
			frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
			/*Integer lisIndex;
			lisIndex = Me.cboAllFunds.ListIndex;
			me.cboSFGNonSFGFlag.ListIndex = lisIndex;*/
			// select the corresponding item
			// enable cmdAdd if there is an item selected in the relate a fund
			// drop down
			/*
			 * if(cboAllFunds.Text != ""){ cmdAdd=true; } } else{ cmdAdd=false; }
			 */
		} catch (

				Exception ex) {
			LOGGER.error("Error occurred in method: cboallfundsclick()" + "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: cboallfundsclick()" + "return : " + frmrelatedfundsBOResp);
		return frmrelatedfundsBOResp;
	}

	// select the corresponding e_invst_instrument_seq in the
	// combobox cboEInvstSeqSFG
	/**
	 * Method cbosfgfundsclick
	 * 
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmRelatedFundsBO> cbosfgfundsclick(FrmRelatedFundsBO frmrelatedfundsBOReq)
			throws TASABusinessException {
		LOGGER.debug("Entering into the method: cbosfgfundsclick()" + "argument : " + frmrelatedfundsBOReq);
		List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
		try {
			frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
			/*
			 * Integer lisIndex; lisIndex=Me.cboSFGFunds.ListIndex;
			 * me.cboEInvstSeqSFG.ListIndex=lisIndex; // select the corresponding item
			 * Me.cmdSelFund=true; // clear the listview
			 * lvrelfunds(.getListitems().getClear()); cmdUp=false; cmdDown=false;
			 * cmdModify=false; cmdDelete=false; // Disable the items for adding a
			 * relationship cmdAdd=false; Me.optSameAssetClass=false; Me.optShowAll=false;
			 * Me.cboAllFunds=false;
			 */
		} catch (Exception ex) {
			LOGGER.error("Error occurred in method: cbosfgfundsclick()" + "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: cbosfgfundsclick()" + "return : " + frmrelatedfundsBOResp);
		return frmrelatedfundsBOResp;
	}

	// adds fund relation
	/**
	 * Method cmdaddclick
	 * 
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmRelatedFundsBO> cmdaddclick(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException {
		LOGGER.debug("Entering into the method: cmdaddclick()" + "argument : " + frmrelatedfundsBOReq);
		List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
		try {
			frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
			/*
			 * String strSQL; Integer maxPriority; Integer iRecAffected; Recordset rs; //
			 * check whether the fund is related already if(Me.cboSFGNonSFGFlag.Text ==
			 * "Y"){
			 */
			frmrelatedfundsBOResp = frmrelatedfundsRepository.cmdaddClick1(frmrelatedfundsBOReq);
			/*
			 * } } else{
			 * strSQL="SElect * from RP_NON_SFG_REL_FUND where E_INVST_INSTRUMENT_SEQ = " +
			 * Me.cboEInvstSeqSFG.Text + " and RP_NON_SFG_FUND_SEQ = " +
			 * cboAllFunds.ItemData(cboAllFunds.ListIndex); } if(! rs.EOF){
			 * MsgBox("A relationship already exists between " & UCase$(cboSFGFunds.Text) &
			 * " and " & UCase$(cboAllFunds.Text), vbInformation); } iRecAffected=0;
			 * maxPriority=GetTheHighestPriority(); // add the next relations priority by
			 * incrementing the maxpriority maxPriority=maxPriority + 1;
			 * if(Me.cboSFGNonSFGFlag.Text == "Y"){
			 */
			frmrelatedfundsBOResp = frmrelatedfundsRepository.cmdaddClick2(frmrelatedfundsBOReq);
			/*
			 * } }else
			 * 
			 * {
			 */
			// non-SFG
			frmrelatedfundsBOResp = frmrelatedfundsRepository.cmdaddClick3(frmrelatedfundsBOReq);
			/*
			 * }
			 * 
			 * cn(.getExecuteStrsql() ,irecaffected); if(iRecAffected > 0){ //
			 * PopulateRelatedFunds Me.cboSFGFunds.ItemData(cboSFGFunds.ListIndex)
			 * MsgBox("Record added successfully!", vbInformation); } // display all related
			 * items for that particular fund
			 * populaterelatedfunds(me.getCboeinvstseqsfg().getText()); // select the first
			 * item by default if(lvRelFunds.ListItems.Count > 0){
			 * lvRelFunds.ListItems.Item(1).Selected=true; cmdUp=false; cmdDelete=true;
			 * if(lvRelFunds.ListItems.Count > 1){ cmdDown=true; } }
			 * MsgBox("Error in cmdAdd_Click. " & Err.Description, vbExclamation);
			 */
		} catch (

				Exception ex) {
			LOGGER.error("Error occurred in method: cmdaddclick()" + "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: cmdaddclick()" + "return : " + frmrelatedfundsBOResp);
		return frmrelatedfundsBOResp;
	}

	// returns the highest priority number from the listview if there is any
	/**
	 * Method getthehighestpriority
	 * 
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmRelatedFundsBO> getthehighestpriority(FrmRelatedFundsBO frmrelatedfundsBOReq)
			throws TASABusinessException {
		LOGGER.debug("Entering into the method: getthehighestpriority()" + "argument : " + frmrelatedfundsBOReq);
		List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
		try {
			frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
			/*
			 * String strSQL; Recordset rs; Integer iPrioritySFG; Integer iPriorityNSFG;
			 * getTheHighestPriority=0; iPrioritySFG=0; iPriorityNSFG=0;
			 */
			frmrelatedfundsBOResp = frmrelatedfundsRepository.getthehighestpriority1(frmrelatedfundsBOReq);
			// get the largest assigned priority for SFG
			/*
			 * if(! rs.EOF){ if(! !=Null(rs("Max_Priority"))){ iPrioritySFG=rs!Max_priority;
			 * } } rs(.getClose()); frmrelatedfundsBOResp =
			 * frmrelatedfundsRepository.getthehighestpriority2(frmrelatedfundsBOReq); if(!
			 * rs.EOF){ if(! !=Null(rs("Max_Priority"))){ iPriorityNSFG=rs!Max_priority; } }
			 * rs(.getClose()); if(iPriorityNSFG > iPrioritySFG){
			 * getTheHighestPriority=iPriorityNSFG; } } else{
			 * getTheHighestPriority=iPrioritySFG; }
			 */
		} catch (

				Exception ex) {
			LOGGER.error(
					"Error occurred in method: getthehighestpriority()" + "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: getthehighestpriority()" + "return : " + frmrelatedfundsBOResp);
		return frmrelatedfundsBOResp;
	}

	/**
	 * Method cmdcloseclick
	 * 
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmRelatedFundsBO> cmdcloseclick(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException {
		LOGGER.debug("Entering into the method: cmdcloseclick()" + "argument : " + frmrelatedfundsBOReq);
		List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
		try {
			frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
		} catch (Exception ex) {
			LOGGER.error("Error occurred in method: cmdcloseclick()" + "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: cmdcloseclick()" + "return : " + frmrelatedfundsBOResp);
		return frmrelatedfundsBOResp;
	}

	// Reorder the priority after deleting a relationship
	/**
	 * Method reorderpriority
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmRelatedFundsBO> reorderpriority(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException{
		LOGGER.debug("Entering into the method: reorderpriority()"+"argument : "+frmrelatedfundsBOReq); 
		List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
		try{
			frmrelatedfundsBOResp =  new ArrayList<FrmRelatedFundsBO>();   
			/*Integer i;
			i=selIndex;
			do{
				//  add one to the priority of the item before the selected item and increment the
				//  priority by one if it is not the first item
				//  If i > 1 Then
				lvRelFunds.ListItems.Item(i)=VBUtilFunctions.getCstr(CInt(lvRelFunds.ListItems.Item(i)) - 1);
				//  Else if it is the first item
				//      lvRelFunds.ListItems.Item(i) = "1"
				//  End If
				i=i + 1;*/
			}catch (Exception ex){
				LOGGER.error("Error occurred in method: reorderpriority()"+"and terminated due to " + ex.getMessage());
				throw new TASABusinessException(ex);
			}
			LOGGER.debug("Exiting the method: reorderpriority()"+"return : "+frmrelatedfundsBOResp);
			return frmrelatedfundsBOResp;
		}

		// deletes a relationship
		/**
		 * Method cmddeleteclick
		 * @param frmrelatedfundsBOReq
		 * @return frmrelatedfundsBOResp
		 * @throws TASABusinessException
		 */
		public List<FrmRelatedFundsBO> cmddeleteclick(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException{
			LOGGER.debug("Entering into the method: cmddeleteclick()"+"argument : "+frmrelatedfundsBOReq); 
			List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
			try{
				frmrelatedfundsBOResp =  new ArrayList<FrmRelatedFundsBO>();   
				/*String strSQL;
				Integer iAnswer;
				Integer selIndex;
				Integer iRecAffected;
				selIndex=lvRelFunds.SelectedItem.Index;
				iAnswer=MsgBox("Are you sure you want to delete the relationship between " +                VBUtilFunctions.toUpper$(cboSFGFunds.Text) + " and " + VBUtilFunctions.toUpper$(lvRelFunds.ListItems.Item(selIndex).SubItems(1)) +                "?", vbQuestion + vbOKCancel);
				if(iAnswer == vbOK){
					//  if the related fund is SFG delete from RP_SFG_REL_FUnd
					if(lvRelFunds.ListItems.Item(selIndex).SubItems(4) == "SFG"){*/
						frmrelatedfundsBOResp = frmrelatedfundsRepository.cmddeleteClick1(frmrelatedfundsBOReq);
						//  non - SFG delete from Rp_Non_SFG_REL_FUND
					/*}
				} else{*/
					frmrelatedfundsBOResp = frmrelatedfundsRepository.cmddeleteClick2(frmrelatedfundsBOReq);
				/*}
				//  delete from the table
				cn(.getExecuteStrsql() ,irecaffected);
				//  remove the item
				lvrelfunds(.getListitems().getRemove(selindex));
				reorderpriority(selindex);
				//   do the re-ordering in the listview
				updatepriority(frmrelatedfundsBOReq);
				//   update the priority in the table as per the listview
				populaterelatedfunds(clng(me.getCboeinvstseqsfg().getText));
				//    refresh the list view
				//  select the first item by default and disable the up arrow
				if(lvRelFunds.ListItems.Count > 0){
					lvRelFunds.ListItems.Item(1).Selected=true;
					cmdUp=false;
					if(lvRelFunds.ListItems.Count > 1){
						cmdDown=true;
					}
				}
			} else{
				//   no more items left in the listview
				cmdDelete=false;
				cmdUp=false;
				cmdDown=false;
			}
		}

		MsgBox("Error in cmdDelete_Click. " & Err.Description, vbExclamation);*/
	}catch(

			Exception ex)
	{
		LOGGER.error("Error occurred in method: cmddeleteclick()" + "and terminated due to " + ex.getMessage());
		throw new TASABusinessException(ex);
	}LOGGER.debug("Exiting the method: cmddeleteclick()"+"return : "+frmrelatedfundsBOResp);return frmrelatedfundsBOResp;
}

/**
 * Method cmddownclick
 * 
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> cmddownclick(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException {
	LOGGER.debug("Entering into the method: cmddownclick()" + "argument : " + frmrelatedfundsBOReq);
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try {
		frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
		/*Integer selIndex;
		// seleted item index
		Integer selIndexDown;
		// the item index below the selected index
		String prioritySelIndex;
		String prioritySelIndexDown;
		String relFundNameSelIndex;
		String relFundNameSelIndexDown;
		String cusipSelIndex;
		String cusipSelIndexDown;
		String seqSelIndex;
		String seqSelIndexDown;
		String sFGNSFGFlagSelIndex;
		String sFGNSFGFlagSelIndexDown;
		selIndex = lvRelFunds.SelectedItem.Index;
		selIndexDown = selIndex + 1;
		prioritySelIndex = lvRelFunds.ListItems.Item(selIndex);
		prioritySelIndexDown = lvRelFunds.ListItems.Item(selIndexDown);
		relFundNameSelIndex = lvRelFunds.ListItems.Item(selIndex).SubItems(1);
		relFundNameSelIndexDown = lvRelFunds.ListItems.Item(selIndexDown).SubItems(1);
		cusipSelIndex = lvRelFunds.ListItems.Item(selIndex).SubItems(2);
		cusipSelIndexDown = lvRelFunds.ListItems.Item(selIndexDown).SubItems(2);
		seqSelIndex = lvRelFunds.ListItems.Item(selIndex).SubItems(3);
		seqSelIndexDown = lvRelFunds.ListItems.Item(selIndexDown).SubItems(3);
		sFGNSFGFlagSelIndex = lvRelFunds.ListItems.Item(selIndex).SubItems(4);
		sFGNSFGFlagSelIndexDown = lvRelFunds.ListItems.Item(selIndexDown).SubItems(4);
		// interchange the selected index and selected index down items
		// lvRelFunds.ListItems.Item(selIndex) = prioritySelIndexDown
		// lvRelFunds.ListItems.Item(selIndexDown) = prioritySelIndex
		lvRelFunds.ListItems.Item(selIndex).SubItems(1) = relFundNameSelIndexDown;
		lvRelFunds.ListItems.Item(selIndexDown).SubItems(1) = relFundNameSelIndex;
		lvRelFunds.ListItems.Item(selIndex).SubItems(2) = cusipSelIndexDown;
		lvRelFunds.ListItems.Item(selIndexDown).SubItems(2) = cusipSelIndex;
		lvRelFunds.ListItems.Item(selIndex).SubItems(3) = SeqSelIndexDown;
		lvRelFunds.ListItems.Item(selIndexDown).SubItems(3) = SeqSelIndex;
		lvRelFunds.ListItems.Item(selIndex).SubItems(4) = SFGNSFGFlagSelIndexDown;
		lvRelFunds.ListItems.Item(selIndexDown).SubItems(4) = SFGNSFGFlagSelIndex;
		lvRelFunds.ListItems.Item(selIndexDown).Selected = true;
		// if the selected item is the last one, disable the down arrow
		// but if it is not the first item , enable up arrow
		if (selIndexDown == lvRelFunds.ListItems.Count) {
			cmdDown = false;
			if (lvRelFunds.ListItems.Count > 1) {
				cmdUp = true;
			}
		}
		// if the selected item is not the first or the last enable both down and up
		// arrow
		if (lvRelFunds.SelectedItem.Index > 1 && lvRelFunds.SelectedItem.Index < lvRelFunds.ListItems.Count) {
			cmdUp = true;
			cmdDown = true;
		}
		// if the down button is clicked, enable modify
		cmdModify = true;*/
	} catch (Exception ex) {
		LOGGER.error("Error occurred in method: cmddownclick()" + "and terminated due to " + ex.getMessage());
		throw new TASABusinessException(ex);
	}
	LOGGER.debug("Exiting the method: cmddownclick()" + "return : " + frmrelatedfundsBOResp);
	return frmrelatedfundsBOResp;
}

/**
 * Method updatepriority
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> updatepriority(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException{
	LOGGER.debug("Entering into the method: updatepriority()"+"argument : "+frmrelatedfundsBOReq); 
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try{
		frmrelatedfundsBOResp =  new ArrayList<FrmRelatedFundsBO>();   
		/*String strSQLSFG;
		String strSQLNSFG;
		Integer i;
		Integer iRecAffectedSFG;
		Integer iRecAffectedNSFG;
		iRecAffectedSFG=0;
		iRecAffectedNSFG=0;
		i=1;
		updatePriority=0;
		//  update RP_SFG_REL_FUND if SFG fund, otherwise RP_NON_SFG_REL_FUND
		do{
			if(lvRelFunds.ListItems.Item(i).SubItems(4) == "SFG"){*/
				//  If strSQLSFG = "" Then
				frmrelatedfundsBOResp = frmrelatedfundsRepository.updatepriority1(frmrelatedfundsBOReq);
				/*//              Else
				//                  strSQLSFG = strSQLSFG & ";" & vbCr & "Update RP_SFG_REL_FUND set Priority_nbr = " & lvRelFunds.ListItems.Item(i) & _
				" where E_Invst_Instrument_seq = " & Me.cboEInvstSeqSFG.Text & " and " & _
				" Rel_E_Invstmnt_Instrument_seq = " & lvRelFunds.ListItems.Item(i).SubItems(3)
				//              End If
				cn(.getExecuteStrsqlsfg() ,irecaffectedsfg);
			}
		} else{*/
			//   non sfg
			//  If strSQLNSFG = "" Then
			frmrelatedfundsBOResp = frmrelatedfundsRepository.updatepriority2(frmrelatedfundsBOReq);
			/*//              Else
			//                  strSQLNSFG = strSQLNSFG & ";" & vbCr & "Update RP_NON_SFG_REL_FUND set Priority_nbr = " & lvRelFunds.ListItems.Item(i) & _
			" where E_Invst_Instrument_seq = " & Me.cboEInvstSeqSFG.Text & " and " & _
			" RP_NON_SFG_FUND_SEQ = " & lvRelFunds.ListItems.Item(i).SubItems(3)
			//              End If
			cn(.getExecuteStrsqlnsfg() ,irecaffectednsfg);
		}
		i=i + 1;
		//      If Trim$(strSQLSFG) <> "" Then
		//          strSQLSFG = strSQLSFG & ";"
		//          cn.Execute strSQLSFG, iRecAffectedSFG
		//      End If
		//  
		//      If Trim$(strSQLNSFG) <> "" Then
		//          strSQLNSFG = strSQLNSFG & " ;"
		//          cn.Execute strSQLNSFG, iRecAffectedNSFG
		//      End If
		updatePriority=iRecAffectedSFG + iRecAffectedNSFG;*/
	}catch (Exception ex){
		LOGGER.error("Error occurred in method: updatepriority()"+"and terminated due to " + ex.getMessage());
		throw new TASABusinessException(ex);
	}
	LOGGER.debug("Exiting the method: updatepriority()"+"return : "+frmrelatedfundsBOResp);
	return frmrelatedfundsBOResp;
}

/**
 * Method cmdmodifyclick
 * 
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> cmdmodifyclick(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException {
	LOGGER.debug("Entering into the method: cmdmodifyclick()" + "argument : " + frmrelatedfundsBOReq);
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try {
		frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
		// call updatepriority to update the information in the database
		/*if (UpdatePriority > 0) {
			MsgBox("Records updated successfully!", vbInformation);
			cmdModify = false;
		}
		MsgBox("Error in cmdModify_Click. " & Err.Description, vbExclamation);*/
	} catch (Exception ex) {
		LOGGER.error("Error occurred in method: cmdmodifyclick()" + "and terminated due to " + ex.getMessage());
		throw new TASABusinessException(ex);
	}
	LOGGER.debug("Exiting the method: cmdmodifyclick()" + "return : " + frmrelatedfundsBOResp);
	return frmrelatedfundsBOResp;
}

/**
 * Method cmdselfundclick
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> cmdselfundclick(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException{
	LOGGER.debug("Entering into the method: cmdselfundclick()"+"argument : "+frmrelatedfundsBOReq); 
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try{
		frmrelatedfundsBOResp =  new ArrayList<FrmRelatedFundsBO>();   
		/*populaterelatedfunds(me.getCboeinvstseqsfg().getText());
		//  if there is an item selected in the Relate a fund drop down
		//  select a fund to relate with
		if(cboAllFunds.Text != ""){
			cmdAdd=true;
		}
	} else{
		cmdAdd=false;
	}
	//  enable the fund selection combo and the radio buttons
	Me.optSameAssetClass=true;
	Me.optShowAll=true;
	Me.cboAllFunds=true;
	//  select the first item by default
	if(Me.lvRelFunds.ListItems.Count > 0){
		me.lvRelFunds.ListItems.Item(1).Selected=true;
		cmdDelete=true;
		//  if there are more items down the first item, enable down button
		if(lvRelFunds.ListItems.Count > 1){
			cmdDown=true;
			cmdUp=false;
			//   because first item is selected
		}
	}
}else

{
	cmdDelete = false;
	cmdUp = false;
	cmdDown = false;
}if(Me.optSameAssetClass.Value)
{
	selfundswithsameassetclass(cbosfgfunds.getItemdata(cbosfgfunds().getListindex));
}}else{showallfunds(frmrelatedfundsBOReq);}MsgBox("Error in cmdSelFund_click. "&Err.Description,vbExclamation);*/
		}catch(Exception ex)
{
	LOGGER.error("Error occurred in method: cmdselfundclick()" + "and terminated due to " + ex.getMessage());
	throw new TASABusinessException(ex);
}LOGGER.debug("Exiting the method: cmdselfundclick()"+"return : "+frmrelatedfundsBOResp);return frmrelatedfundsBOResp;
}

// when user clicks the up button, move the priorities up
/**
 * Method cmdupclick
 * 
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> cmdupclick(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException {
	LOGGER.debug("Entering into the method: cmdupclick()" + "argument : " + frmrelatedfundsBOReq);
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try {
		frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
		/*Integer selIndex;
		Integer selIndexUp;
		String prioritySelIndex;
		String priorityselIndexUp;
		String fundNameselIndex;
		String fundNameselIndexUp;
		String cusipSelIndex;
		String cusipselIndexUp;
		String sFGNSFGselIndex;
		String sFGNSFGselIndexUp;
		String seqSelIndex;
		String seqselIndexUp;
		String tmp;
		// if the up button is clicked
		cmdModify = true;
		selIndex = lvRelFunds.SelectedItem.Index;
		selIndexUp = selIndex - 1;
		// the item above the selected item
		prioritySelIndex = lvRelFunds.ListItems.Item(selIndex);
		priorityselIndexUp = lvRelFunds.ListItems.Item(selIndexUp);
		cusipSelIndex = lvRelFunds.ListItems.Item(selIndex).SubItems(2);
		cusipselIndexUp = lvRelFunds.ListItems.Item(selIndexUp).SubItems(2);
		fundNameselIndex = lvRelFunds.ListItems.Item(selIndex).SubItems(1);
		fundNameselIndexUp = lvRelFunds.ListItems.Item(selIndexUp).SubItems(1);
		sFGNSFGselIndex = lvRelFunds.ListItems.Item(selIndex).SubItems(4);
		sFGNSFGselIndexUp = lvRelFunds.ListItems.Item(selIndexUp).SubItems(4);
		seqSelIndex = lvRelFunds.ListItems.Item(selIndex).SubItems(3);
		seqselIndexUp = lvRelFunds.ListItems.Item(selIndexUp).SubItems(3);
		// interchange
		// lvRelFunds.ListItems.Item(selIndex) = PriorityselIndexUp
		// lvRelFunds.ListItems.Item(selIndexUp) = prioritySelIndex
		lvRelFunds.ListItems.Item(selIndex).SubItems(2) = CusipselIndexUp;
		lvRelFunds.ListItems.Item(selIndexUp).SubItems(2) = cusipSelIndex;
		lvRelFunds.ListItems.Item(selIndex).SubItems(1) = FundNameselIndexUp;
		lvRelFunds.ListItems.Item(selIndexUp).SubItems(1) = FundNameselIndex;
		lvRelFunds.ListItems.Item(selIndex).SubItems(3) = SeqselIndexUp;
		lvRelFunds.ListItems.Item(selIndexUp).SubItems(3) = SeqSelIndex;
		lvRelFunds.ListItems.Item(selIndex).SubItems(4) = SFGNSFGselIndexUp;
		lvRelFunds.ListItems.Item(selIndexUp).SubItems(4) = SFGNSFGselIndex;
		lvRelFunds.ListItems.Item(selIndexUp).Selected = true;
		// if the selected item is the first item, disable the up arrow
		// but if there are more than one item in the listview, enable the
		// down arrow
		if (selIndexUp == 1) {
			cmdUp = false;
			if (lvRelFunds.ListItems.Count > 1) {
				cmdDown = true;
			}
		}
		// if the selected item is not the first or the last enable both down and up
		// arrows
		if (lvRelFunds.SelectedItem.Index > 1 && lvRelFunds.SelectedItem.Index < lvRelFunds.ListItems.Count) {
			cmdUp = true;
			cmdDown = true;
		}
		MsgBox("Error in cmdUp_click." & Err.Description);*/
	} catch (Exception ex) {
		LOGGER.error("Error occurred in method: cmdupclick()" + "and terminated due to " + ex.getMessage());
		throw new TASABusinessException(ex);
	}
	LOGGER.debug("Exiting the method: cmdupclick()" + "return : " + frmrelatedfundsBOResp);
	return frmrelatedfundsBOResp;
}

/**
 * Method formload
 * 
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> formload(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException {
	LOGGER.debug("Entering into the method: formload()" + "argument : " + frmrelatedfundsBOReq);
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try {
		frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
		/*populatesfgfunds(frmrelatedfundsBOReq);
		// disable all buttons except the close
		cmdAdd = false;
		cmdModify = false;
		cmdDelete = false;
		cmdUp = false;
		cmdDown = false;
		cmdSelFund = false;
		optSameAssetClass.Value = true;
		cboAllFunds = true;
		MsgBox("Error in Form_Load. " & Err.Description, vbInformation);*/
	} catch (Exception ex) {
		LOGGER.error("Error occurred in method: formload()" + "and terminated due to " + ex.getMessage());
		throw new TASABusinessException(ex);
	}
	LOGGER.debug("Exiting the method: formload()" + "return : " + frmrelatedfundsBOResp);
	return frmrelatedfundsBOResp;
}

/**
 * Method formunload
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> formunload(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException{
	LOGGER.debug("Entering into the method: formunload()"+"argument : "+frmrelatedfundsBOReq); 
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try{
		frmrelatedfundsBOResp =  new ArrayList<FrmRelatedFundsBO>();   
		//  keep track of whether the user has clicked modify button to
		//  update the database after clicking up and down to adjust the priority
		//  if the user close the form, without clikcing modify all changes will be lost,
		//  so notify them. if the modify is enabled when user clicks the close, that means
		//  the updates havent been saved to the database yet
		/*Integer iAnswer;
		Integer recAffected;
		if(cmdModify.Enabled == true){
			iAnswer=MsgBox("Do you want to save the changes you made for the priority in the related fund list?", vbYesNoCancel + vbQuestion);
			if(iAnswer == vbYes){
				recAffected=UpdatePriority;
			}
		}   else if(iAnswer == vbCancel){
			//   dont close the form
			cancel=1;
		}
	}
	MsgBox("Error in cmdclose_click." & Err.Description, vbExclamation);
	cancel=1;*/
}catch(Exception ex)
{
	LOGGER.error("Error occurred in method: formunload()" + "and terminated due to " + ex.getMessage());
	throw new TASABusinessException(ex);
}LOGGER.debug("Exiting the method: formunload()"+"return : "+frmrelatedfundsBOResp);return frmrelatedfundsBOResp;
}

// depending on the selected item enable/disable up, down arrow button
/**
 * Method lvrelfundsclick
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> lvrelfundsclick(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException{
	LOGGER.debug("Entering into the method: lvrelfundsclick()"+"argument : "+frmrelatedfundsBOReq); 
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try{
		frmrelatedfundsBOResp =  new ArrayList<FrmRelatedFundsBO>();   
		Integer i;
		/*if(lvRelFunds.ListItems.Count > 0){
			i=lvRelFunds.SelectedItem.Index;
			cmdDelete=true;
		}
	} else{
	}
	//  if the selected item is the first item, make the up arrow disabled
	if(i == 1){
		cmdUp=false;
	}
}else

{
	cmdUp = true;
}
// if the selected item is the last in the list, make the down arrow disabled
if(i==lvRelFunds.ListItems.Count)
{
	cmdDown = false;
}}else{cmdDown=true;}*/
		}catch(Exception ex){
	LOGGER.error("Error occurred in method: lvrelfundsclick()"+"and terminated due to " + ex.getMessage());
	throw new TASABusinessException(ex);
}LOGGER.debug("Exiting the method: lvrelfundsclick()"+"return : "+frmrelatedfundsBOResp);return frmrelatedfundsBOResp;
}

// sort ascending/descending
/**
 * Method lvrelfundscolumnclick
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> lvrelfundscolumnclick(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException{
	LOGGER.debug("Entering into the method: lvrelfundscolumnclick()"+"argument : "+frmrelatedfundsBOReq); 
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try{
		/*frmrelatedfundsBOResp =  new ArrayList<FrmRelatedFundsBO>();   
		if(lvRelFunds.SortOrder == lvwAscending){
			lvRelFunds.SortOrder=lvwDescending;
		}
	} else{
		lvRelFunds.SortOrder=lvwAscending;
	}*/
	}catch(

		Exception ex)
{
	LOGGER.error("Error occurred in method: lvrelfundscolumnclick()" + "and terminated due to " + ex.getMessage());
	throw new TASABusinessException(ex);
}LOGGER.debug("Exiting the method: lvrelfundscolumnclick()"+"return : "+frmrelatedfundsBOResp);return frmrelatedfundsBOResp;
}

/**
 * Method selfundswithsameassetclass
 * @param frmrelatedfundsBOReq
 * @return frmrelatedfundsBOResp
 * @throws TASABusinessException
 */
public List<FrmRelatedFundsBO> selfundswithsameassetclass(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException{
	LOGGER.debug("Entering into the method: selfundswithsameassetclass()"+"argument : "+frmrelatedfundsBOReq); 
	List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
	try{
		frmrelatedfundsBOResp =  new ArrayList<FrmRelatedFundsBO>();   
		/*String strSQL;
		Recordset rs1;
		Recordset rs;
		Long sfgAssetSeq;
		Integer i;
		Integer j;*/
		//  determine the asset class of the selected SFG fund
		frmrelatedfundsBOResp = frmrelatedfundsRepository.selfundswithsameassetclass1(frmrelatedfundsBOReq);
		/*if(! rs1.EOF){
			sfgAssetSeq=rs1("RP_ASSET_CLASS_SEQ");
		}*/
		//   rs1.Close
		//  Set rs = Nothing
		//  get the non-sfg funds with the same asset class
		frmrelatedfundsBOResp = frmrelatedfundsRepository.selfundswithsameassetclass2(frmrelatedfundsBOReq);
		/*i=1;
		//  add it to an invisible listview
		do{
			lvallfunds(.getListitems().getAdd() ,rs!rpNonSfgFundSeq);
			lvAllFunds.ListItems.Item(i).SubItems(1)=rs!Fund_Nm;
			lvAllFunds.ListItems.Item(i).SubItems(2)="N";
			rs(.getMovenext());
			i=i + 1;
			rs(.getClose());
			//  get all SFG funds except the fund selected in the Sfg fund combo box
			frmrelatedfundsBOResp = frmrelatedfundsRepository.selfundswithsameassetclass3(frmrelatedfundsBOReq);
			//  " and unit_value_calc_type_cd = SAMEDAY"
			//  add to the listview
			do{
				lvallfunds(.getListitems().getAdd() ,rs!seq);
				lvAllFunds.ListItems.Item(i).SubItems(1)=rs!full_nm;
				lvAllFunds.ListItems.Item(i).SubItems(2)="Y";
				rs(.getMovenext());
				i=i + 1;
				//  sort the listview
				lvAllFunds.Sorted=true;
				lvAllFunds.SortKey=1;
				lvAllFunds.Sorted=false;
				rs(.getClose());
				//  add the sorted list to cboAllfunds and cboSFGNonSFGFlag
				cboallfunds(.getClear());
				cbosfgnonsfgflag(.getClear());
				i=1;
				j=0;
				do{
					cboallfunds(.getAdditemLvallfunds().getListitems().getItem(i).getSubitems(1));
					cboAllFunds.ItemData(j)=Convert.ToInt64(lvAllFunds.ListItems.Item(i));
					i=i + 1;
					j=j + 1;*/
				}catch (Exception ex){
					LOGGER.error("Error occurred in method: selfundswithsameassetclass()"+"and terminated due to " + ex.getMessage());
					throw new TASABusinessException(ex);
				}
				LOGGER.debug("Exiting the method: selfundswithsameassetclass()"+"return : "+frmrelatedfundsBOResp);
				return frmrelatedfundsBOResp;
			}

			/**
			 * Method showallfunds
			 * @param frmrelatedfundsBOReq
			 * @return frmrelatedfundsBOResp
			 * @throws TASABusinessException
			 */
			public List<FrmRelatedFundsBO> showallfunds(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASABusinessException{
				LOGGER.debug("Entering into the method: showallfunds()"+"argument : "+frmrelatedfundsBOReq); 
				List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
				try{
					frmrelatedfundsBOResp =  new ArrayList<FrmRelatedFundsBO>();   
					/*String strSQL;
					Recordset rs;
					Integer i;
					Integer j;
					//  get the non-SFG funds
					frmrelatedfundsBOResp = frmrelatedfundsRepository.showallfunds1(frmrelatedfundsBOReq);
					i=1;
					//  add it to an invisible listview
					do{
						lvallfunds(.getListitems().getAdd() ,rs!rpNonSfgFundSeq);
						lvAllFunds.ListItems.Item(i).SubItems(1)=rs!Fund_Nm;
						lvAllFunds.ListItems.Item(i).SubItems(2)="N";
						rs(.getMovenext());
						i=i + 1;
						rs(.getClose());
						//  add sfg funds
						frmrelatedfundsBOResp = frmrelatedfundsRepository.showallfunds2(frmrelatedfundsBOReq);
						//  " and unit_value_calc_type_cd = SAMEDAY"
						//  add to the listview
						do{
							lvallfunds(.getListitems().getAdd() ,rs!seq);
							lvAllFunds.ListItems.Item(i).SubItems(1)=rs!full_nm;
							lvAllFunds.ListItems.Item(i).SubItems(2)="Y";
							rs(.getMovenext());
							i=i + 1;
							//  sort the listview
							lvAllFunds.Sorted=true;
							lvAllFunds.SortKey=1;
							lvAllFunds.Sorted=false;
							rs(.getClose());
							//  add the sorted list to cboAllfunds and cboSFGNonSFGFlag
							cboallfunds(.getClear());
							cbosfgnonsfgflag(.getClear());
							i=1;
							j=0;
							do{
								cboallfunds(.getAdditemLvallfunds().getListitems().getItem(i).getSubitems(1));
								cboAllFunds.ItemData(j)=Convert.ToInt64(lvAllFunds.ListItems.Item(i));
								i=i + 1;
								j=j + 1;*/
							}catch (Exception ex){
								LOGGER.error("Error occurred in method: showallfunds()"+"and terminated due to " + ex.getMessage());
								throw new TASABusinessException(ex);
							}
							LOGGER.debug("Exiting the method: showallfunds()"+"return : "+frmrelatedfundsBOResp);
							return frmrelatedfundsBOResp;
						}

						// when click on the optsame asset class option, populate
						// the combo box with SFG and non-sfg funds which has the same
						// asset class as the SFG fund selected in the top combo box
						/**
						 * Method optsameassetclassclick
						 * 
						 * @param frmrelatedfundsBOReq
						 * @return frmrelatedfundsBOResp
						 * @throws TASABusinessException
						 */
						public List<FrmRelatedFundsBO> optsameassetclassclick(FrmRelatedFundsBO frmrelatedfundsBOReq)
								throws TASABusinessException {
							LOGGER.debug("Entering into the method: optsameassetclassclick()" + "argument : " + frmrelatedfundsBOReq);
							List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
							try {
								frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
								/*Long assetSeq;
								assetSeq = cboSFGFunds.ItemData(cboSFGFunds.ListIndex);
								// show only the funds with the same asset class as
								// the SFG fund selected in the top SFG fund combo
								selfundswithsameassetclass(assetseq);
								MsgBox("Error in optSameAssetClass_Click. " & Err.Description, vbExclamation);*/
							} catch (Exception ex) {
								LOGGER.error(
										"Error occurred in method: optsameassetclassclick()" + "and terminated due to " + ex.getMessage());
								throw new TASABusinessException(ex);
							}
							LOGGER.debug("Exiting the method: optsameassetclassclick()" + "return : " + frmrelatedfundsBOResp);
							return frmrelatedfundsBOResp;
						}

						// populate all sfg and non-sfg fund in the bottom combo box
						/**
						 * Method optshowallclick
						 * 
						 * @param frmrelatedfundsBOReq
						 * @return frmrelatedfundsBOResp
						 * @throws TASABusinessException
						 */
						public List<FrmRelatedFundsBO> optshowallclick(FrmRelatedFundsBO frmrelatedfundsBOReq)
								throws TASABusinessException {
							LOGGER.debug("Entering into the method: optshowallclick()" + "argument : " + frmrelatedfundsBOReq);
							List<FrmRelatedFundsBO> frmrelatedfundsBOResp = null;
							try {
								frmrelatedfundsBOResp = new ArrayList<FrmRelatedFundsBO>();
								/*showallfunds(frmrelatedfundsBOReq);
								MsgBox("Error in optShowAll_click. " & Err.Description, vbExclamation);*/
							} catch (Exception ex) {
								LOGGER.error("Error occurred in method: optshowallclick()" + "and terminated due to " + ex.getMessage());
								throw new TASABusinessException(ex);
							}
							LOGGER.debug("Exiting the method: optshowallclick()" + "return : " + frmrelatedfundsBOResp);
							return frmrelatedfundsBOResp;
						}

					}