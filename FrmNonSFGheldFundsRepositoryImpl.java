package com.sic.tasa.repositories.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.orm.hibernate4.HibernateTemplate;
import org.springframework.stereotype.Repository;

import com.sic.tasa.dataobject.FrmNonSFGheldFundsBO;
import com.sic.tasa.exceptions.TASADataAccessException;
import com.sic.tasa.repositories.IFrmNonSFGheldFundsRepository;
import com.sic.tasa.util.AtmaLogger;


/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@Repository
public class FrmNonSFGheldFundsRepositoryImpl implements IFrmNonSFGheldFundsRepository{

    private static AtmaLogger LOGGER = AtmaLogger.create(FrmNonSFGheldFundsRepositoryImpl.class.getName());

    private HibernateTemplate template;


    /*
	 * Method populateassetclasscombo1
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> populateassetclasscombo1(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populateassetclasscombo1 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from rp.rp_asset_class where RP_ASSET_CLASS_PARENT_SEQ is NOT NULL order by Asset_Class_Nm asc";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    	FrmNonSFGheldFundsBO bo=new FrmNonSFGheldFundsBO();
	    	bo.setCboassetclass("cboselassetclass");
	    	bo.setCboassetclass("2");
	    	bo.setCboassetclass("4");
	    	frmnonsfgheldfundsBOResp.add(bo);	    	
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populateassetclasscombo1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populateassetclasscombo1()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method populatefunds1
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> populatefunds1(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populatefunds1 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from RP_NON_SFG_FUND where RP_Asset_Class_Seq = AssetClassSeq order by FUND_NM";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populatefunds1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populatefunds1()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method populatefunds2
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> populatefunds2(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populatefunds2 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from RP_NON_SFG_FUND order by FUND_NM";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populatefunds2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populatefunds2()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method popassetclasscombowithunassigned1
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> popassetclasscombowithunassigned1(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: popassetclasscombowithunassigned1 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select Asset_Class_Nm, rp_asset_class_seq from rp_asset_class where RP_ASSET_CLASS_PARENT_SEQ is NOT NULL order by Asset_Class_Nm asc";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);
	    	FrmNonSFGheldFundsBO bo=new FrmNonSFGheldFundsBO();
	    	bo.setCboassetclass("cboassetclass");
	    	bo.setCboassetclass("2");
	    	bo.setCboassetclass("8");
	    	frmnonsfgheldfundsBOResp.add(bo);
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: popassetclasscombowithunassigned1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: popassetclasscombowithunassigned1()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method getsfgfundnames1
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> getsfgfundnames1(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: getsfgfundnames1 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from rp_modified_investment_pool where e_invst_instrument_seq in (relEInvstSeq) order by full_nm";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: getsfgfundnames1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: getsfgfundnames1()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method cmddeleteClick1
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> cmddeleteClick1(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmddeleteClick1 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from RP_NON_SFG_REL_FUND where RP_NON_SFG_FUND_SEQ = cboFunds.ItemData(cboFunds.ListIndex)";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmddeleteClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmddeleteClick1()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method cmddeleteClick2
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> cmddeleteClick2(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmddeleteClick2 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Delete from RP_NON_SFG_FUND where RP_NON_SFG_FUND_SEQ = cboFunds.ItemData(cboFunds.ListIndex)";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmddeleteClick2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmddeleteClick2()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method duplicatecusip1
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> duplicatecusip1(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: duplicatecusip1 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from RP_NON_SFG_FUND where CUSIP_ID =  'cusip'";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: duplicatecusip1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: duplicatecusip1()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method duplicatecusip2
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> duplicatecusip2(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: duplicatecusip2 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from rp_non_sfg_fund where rp_non_sfg_fund_seq != CInt(txtSeq.Text) and CUSIP_ID =' cusip'";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: duplicatecusip2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: duplicatecusip2()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method duplicatecusip3
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> duplicatecusip3(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: duplicatecusip3 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from E_INVST_INSTRUMENT where CUSIP_ID =' cusip '";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: duplicatecusip3()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: duplicatecusip3()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method savechanges1
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> savechanges1(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: savechanges1 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Insert into RP_NON_SFG_FUND (RP_ASSET_CLASS_SEQ,CUSIP_ID, FUND_NM,ticker_symbol_id) Values( cboAssetClass.ItemData(cboAssetClass.ListIndex) ' txtCusip.Text', 'txtName.Text',' tickerSym')";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: savechanges1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: savechanges1()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method savechanges2
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> savechanges2(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: savechanges2 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Update RP_NON_SFG_FUND set RP_ASSET_CLASS_SEQ = cboAssetClass.ItemData(cboAssetClass.ListIndex),CUSIP_ID = 'txtCusip.Text', FUND_NM = 'VBUtilFunctions.trim(txtName.Text)',ticker_symbol_id = 'tickerSym' where RP_NON_SFG_FUND_SEQ =  txtSeq.Text";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: savechanges2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: savechanges2()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method cmdsaveClick1
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> cmdsaveClick1(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdsaveClick1 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from RP_NON_SFG_FUND where CUSIP_ID = ' cusip '";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdsaveClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdsaveClick1()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }
    /*
	 * Method populatefunddetails1
	 * @param frmnonsfgheldfundsBOReq
	 * @return frmnonsfgheldfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNonSFGheldFundsBO> populatefunddetails1(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populatefunddetails1 and argument : "+frmnonsfgheldfundsBOReq); 
	    List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =new ArrayList<FrmNonSFGheldFundsBO>();
	    String sql = "Select * from RP_NON_SFG_FUND where RP_NON_SFG_FUND_SEQ = fundSeq";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnonsfgheldfundsBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populatefunddetails1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populatefunddetails1()"+"return : "+frmnonsfgheldfundsBOResp);
         return frmnonsfgheldfundsBOResp;
    }

}