package com.sic.tasa.repositories.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.orm.hibernate4.HibernateTemplate;
import org.springframework.stereotype.Repository;

import com.sic.tasa.dataobject.FrmRelatedFundsBO;
import com.sic.tasa.exceptions.TASADataAccessException;
import com.sic.tasa.repositories.IFrmRelatedFundsRepository;
import com.sic.tasa.util.AtmaLogger;

/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@Repository
public class FrmRelatedFundsRepositoryImpl implements IFrmRelatedFundsRepository{

	private static final AtmaLogger LOGGER = AtmaLogger.create(FrmRelatedFundsRepositoryImpl.class.getName());

    private HibernateTemplate template;


    /*
	 * Method populatesfgfunds1
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> populatesfgfunds1(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populatesfgfunds1 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "SELECT full_nm,rp_mip_seq, e_invst_instrument_seq FROM             "rp_modified_investment_pool WHERE status_txt in             "('SETUP', 'ACTIVE') and e_invst_instrument_seq is not null            "and plan_type_ind = 'DC' order by full_nm";
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);*/  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populatesfgfunds1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populatesfgfunds1()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method populaterelatedfunds1
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> populaterelatedfunds1(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populaterelatedfunds1 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Select EII.CUSIP_ID,MIP.FULL_NM,REL.PRIORITY_NBR,REL.REL_E_INVSTMNT_INSTRUMENT_SEQ "from RP_SFG_REL_FUND REL,E_INVST_INSTRUMENT  EII, RP_MODIFIED_INVESTMENT_POOL MIP  "where EII.E_Invst_Instrument_seq = MIP.E_Invst_Instrument_seq and  "REL_E_Invstmnt_Instrument_seq = EII.E_Invst_Instrument_seq and  "REL.E_Invst_Instrument_seq = eInvstSeq + "and MIP.plan_type_ind = 'DC' order by priority_nbr asc";
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp); */ 
	    	 FrmRelatedFundsBO bo = new FrmRelatedFundsBO();
	    	 bo.setCboeInvstSeqSfg("1");
	    	 bo.setCboSfgnOnSfgFlag("TRUE");
	    	 frmrelatedfundsBOResp.add(bo);
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populaterelatedfunds1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populaterelatedfunds1()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method populaterelatedfunds2
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> populaterelatedfunds2(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populaterelatedfunds2 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "select NSFG.CUSIP_ID, REL.PRIORITY_NBR, NSFG.FUND_NM, REL.RP_NON_SFG_FUND_SEQ  "from RP_NON_SFG_REL_FUND REL, RP_NON_SFG_FUND NSFG "where  REL.RP_NON_SFG_FUND_SEQ = NSFG.RP_NON_SFG_FUND_SEQ and REL.E_Invst_Instrument_seq =  eInvstSeq;
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp); */ 
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populaterelatedfunds2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populaterelatedfunds2()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method cmdaddClick1
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> cmdaddClick1(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdaddClick1 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Select * from RP_SFG_REL_FUND where E_INVST_INSTRUMENT_SEQ =                 Me.cboEInvstSeqSFG.Text + "and REL_E_INVSTMNT_INSTRUMENT_SEQ =                 cboAllFunds.ItemData(cboAllFunds.ListIndex);
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp); */ 
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdaddClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdaddClick1()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method cmdaddClick2
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> cmdaddClick2(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdaddClick2 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Insert into RP_SFG_REL_FUND (E_INVST_INSTRUMENT_SEQ, REL_E_INVSTMNT_INSTRUMENT_SEQ,            "PRIORITY_NBR) Values( Me.cboEInvstSeqSFG.Text + ", cboAllFunds.ItemData(cboAllFunds.ListIndex) +            ", maxPriority + ")";
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp); */ 
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdaddClick2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdaddClick2()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method cmdaddClick3
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> cmdaddClick3(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdaddClick3 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Insert into RP_NON_SFG_REL_FUND (E_INVST_INSTRUMENT_SEQ, RP_NON_SFG_FUND_SEQ,            "PRIORITY_NBR) Values( Me.cboEInvstSeqSFG.Text + ", cboAllFunds.ItemData(cboAllFunds.ListIndex) +            ", maxPriority + ")";
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);  */
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdaddClick3()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdaddClick3()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method getthehighestpriority1
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> getthehighestpriority1(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: getthehighestpriority1 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Select max(Priority_nbr) Max_Priority from RP_SFG_REL_FUND where E_Invst_instrument_seq =             Me.cboEInvstSeqSFG.Text;
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);*/  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: getthehighestpriority1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: getthehighestpriority1()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method getthehighestpriority2
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> getthehighestpriority2(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: getthehighestpriority2 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Select max(Priority_nbr) max_priority from rp_non_SFg_rel_fund where            "E_invst_instrument_seq =  cboEInvstSeqSFG.Text;
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp); */ 
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: getthehighestpriority2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: getthehighestpriority2()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method cmddeleteClick1
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> cmddeleteClick1(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmddeleteClick1 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Delete from RP_SFG_REL_FUND where E_INVST_INSTRUMENT_SEQ =                     Me.cboEInvstSeqSFG.Text + "and REL_E_INVSTMNT_INSTRUMENT_SEQ =                     lvRelFunds.ListItems.Item(selIndex).SubItems(3);
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp); */ 
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmddeleteClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmddeleteClick1()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method cmddeleteClick2
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> cmddeleteClick2(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmddeleteClick2 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Delete from RP_NON_SFG_REL_FUND where E_INVST_InsTRUMENT_SEQ =                     cboEInvstSeqSFG.Text + "and RP_NON_SFG_FUnD_SEQ =                     lvRelFunds.ListItems.Item(selIndex).SubItems(3);
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);*/  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmddeleteClick2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmddeleteClick2()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method updatepriority1
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> updatepriority1(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: updatepriority1 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Update RP_SFG_REL_FUND set Priority_nbr =  lvRelFunds.ListItems.Item(i) +                         "where E_Invst_Instrument_seq =  Me.cboEInvstSeqSFG.Text + "and                          "Rel_E_Invstmnt_Instrument_seq =  lvRelFunds.ListItems.Item(i).SubItems(3);
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);*/  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: updatepriority1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: updatepriority1()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method updatepriority2
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> updatepriority2(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: updatepriority2 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Update RP_NON_SFG_REL_FUND set Priority_nbr =  lvRelFunds.ListItems.Item(i) +                         "where E_Invst_Instrument_seq =  Me.cboEInvstSeqSFG.Text + "and                          "RP_NON_SFG_FUND_SEQ =  lvRelFunds.ListItems.Item(i).SubItems(3);
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);*/  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: updatepriority2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: updatepriority2()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method selfundswithsameassetclass1
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> selfundswithsameassetclass1(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: selfundswithsameassetclass1 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Select RPD.RP_ASSET_CLASS_SEQ from RP_RPD_FUND RPD, RP_MIP_RPD_FUND RPDMIP,              "RP_MODIFIED_INVESTMENT_POOL MIP where MIP.RP_MIP_SEQ = RPDMIP.RP_MIP_SEQ              "&& RPDMIP.RP_RPD_FUND_SEQ = RPD.RP_RPD_FUND_SEQ and             "MIP.RP_MIP_SEQ = assetSeq;
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);*/  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: selfundswithsameassetclass1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: selfundswithsameassetclass1()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method selfundswithsameassetclass2
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> selfundswithsameassetclass2(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: selfundswithsameassetclass2 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Select * from RP_NON_SFG_FUND where RP_ASSET_CLASS_SEQ =  sfgAssetSeq;
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);*/  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: selfundswithsameassetclass2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: selfundswithsameassetclass2()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method selfundswithsameassetclass3
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> selfundswithsameassetclass3(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: selfundswithsameassetclass3 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Select MIP.FULL_NM, MIP.E_INVST_INSTRUMENT_SEQ Seq from               "RP_MODIFIED_INVESTMENT_POOL MIP, RP_MIP_RPD_FUND MIPRPD, RP_RPD_FUND RPD                "where MIP.RP_MIP_SEQ =  MIPRPD.RP_MIP_SEQ and MIPRPD.RP_RPD_FUND_SEQ = RPD.RP_RPD_FUND_SEQ and               "RPD.RP_ASSET_CLASS_SEQ =  sfgAssetSeq + "and MIP.RP_MIP_SEQ !=               cboSFGFunds.ItemData(cboSFGFunds.ListIndex) + "and status_txt in ('SETUP', 'ACTIVE') and MIP.E_INVST_INSTRUMENT_SEQ is not null              "and plan_type_ind = 'DC'";
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);*/  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: selfundswithsameassetclass3()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: selfundswithsameassetclass3()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method showallfunds1
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> showallfunds1(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: showallfunds1 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Select * from RP_NON_SFG_FUND ";
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp); */ 
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: showallfunds1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: showallfunds1()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }
    /*
	 * Method showallfunds2
	 * @param frmrelatedfundsBOReq
	 * @return frmrelatedfundsBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmRelatedFundsBO> showallfunds2(FrmRelatedFundsBO frmrelatedfundsBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: showallfunds2 and argument : "+frmrelatedfundsBOReq); 
	    List<FrmRelatedFundsBO> frmrelatedfundsBOResp =new ArrayList<FrmRelatedFundsBO>();
	    //String sql = "Select FULL_NM , E_INVST_INSTRUMENT_SEQ SEQ from             "RP_MODIFIED_INVESTMENT_POOL where rp_MIP_SEQ !=             cboSFGFunds.ItemData(cboSFGFunds.ListIndex) + "and status_txt in             "('SETUP', 'ACTIVE') and E_INVST_INSTRUMENT_SEQ is not null             "and plan_type_ind = 'DC'";
	    try {
	         /*List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
	         ObjectCopier.copy(entityList, frmrelatedfundsBOResp);*/  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: showallfunds2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: showallfunds2()"+"return : "+frmrelatedfundsBOResp);
         return frmrelatedfundsBOResp;
    }

}