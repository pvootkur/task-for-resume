package com.sic.tasa.rest;


import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.sic.tasa.dataobject.FrmNonSFGheldFundsBO;
import com.sic.tasa.exceptions.TASARESTException;
import com.sic.tasa.service.IFrmNonSFGheldFundsService;
import com.sic.tasa.util.AtmaLogger;


/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@RestController
@RequestMapping(value = "/FrmNonSFGheldFundsController")
public class FrmNonSFGheldFundsController {

    private static AtmaLogger LOGGER = AtmaLogger.create(FrmNonSFGheldFundsController.class.getName());

		@Autowired
		private IFrmNonSFGheldFundsService frmnonsfgheldfundsService;

		public void setFrmNonSFGheldFundsService(IFrmNonSFGheldFundsService frmnonsfgheldfundsService) {
		    this.frmnonsfgheldfundsService = frmnonsfgheldfundsService;
		}


    /*
     * Method populateassetclasscombo
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/populateassetclasscombo" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> populateassetclasscombo(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: populateassetclasscombo and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.populateassetclasscombo(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: populateassetclasscombo and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: populateassetclasscombo()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method populatefunds
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/populatefunds" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> populatefunds(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: populatefunds and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.populatefunds(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: populatefunds and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: populatefunds()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method popassetclasscombowithunassigned
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/popassetclasscombowithunassigned" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> popassetclasscombowithunassigned(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: popassetclasscombowithunassigned and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.popassetclasscombowithunassigned(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: popassetclasscombowithunassigned and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: popassetclasscombowithunassigned()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method makeunassignedastext
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/makeunassignedastext" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> makeunassignedastext(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: makeunassignedastext and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.makeunassignedastext(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: makeunassignedastext and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: makeunassignedastext()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method selectassetclass
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/selectassetclass" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> selectassetclass(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: selectassetclass and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.selectassetclass(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: selectassetclass and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: selectassetclass()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cboassetclasschange
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cboassetclasschange" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cboassetclasschange(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cboassetclasschange and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cboassetclasschange(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cboassetclasschange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cboassetclasschange()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cboassetclassclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cboassetclassclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cboassetclassclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cboassetclassclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cboassetclassclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cboassetclassclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cboassetclassclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cbofundschange
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cbofundschange" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cbofundschange(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cbofundschange and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cbofundschange(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cbofundschange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cbofundschange()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cbofundsclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cbofundsclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cbofundsclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cbofundsclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cbofundsclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cbofundsclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cbofundsclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cboselassetclassclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cboselassetclassclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cboselassetclassclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cboselassetclassclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cboselassetclassclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cboselassetclassclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cboselassetclassclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cmdclearclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdclearclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cmdclearclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdclearclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cmdclearclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdclearclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdclearclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cmdcloseclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdcloseclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cmdcloseclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdcloseclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cmdcloseclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdcloseclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdcloseclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method getsfgfundnames
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/getsfgfundnames" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> getsfgfundnames(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: getsfgfundnames and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.getsfgfundnames(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: getsfgfundnames and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: getsfgfundnames()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cmddeleteclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmddeleteclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cmddeleteclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmddeleteclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cmddeleteclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmddeleteclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmddeleteclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method duplicatecusip
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/duplicatecusip" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> duplicatecusip(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: duplicatecusip and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.duplicatecusip(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: duplicatecusip and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: duplicatecusip()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method savechanges
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/savechanges" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> savechanges(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: savechanges and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.savechanges(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: savechanges and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: savechanges()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cmdsaveclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdsaveclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cmdsaveclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdsaveclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cmdsaveclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdsaveclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdsaveclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method populatefunddetails
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/populatefunddetails" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> populatefunddetails(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: populatefunddetails and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.populatefunddetails(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: populatefunddetails and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: populatefunddetails()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method cmdselfundclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdselfundclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> cmdselfundclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdselfundclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.cmdselfundclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdselfundclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdselfundclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method enabledisablecontrols
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/enabledisablecontrols" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> enabledisablecontrols(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: enabledisablecontrols and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.enabledisablecontrols(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: enabledisablecontrols and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: enabledisablecontrols()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method formload
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formload" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> formload(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: formload and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.formload(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formload and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formload()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method formunload
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formunload" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> formunload(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: formunload and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.formunload(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formunload and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formunload()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method optfilterbyassetclassclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/optfilterbyassetclassclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> optfilterbyassetclassclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: optfilterbyassetclassclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.optfilterbyassetclassclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: optfilterbyassetclassclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: optfilterbyassetclassclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method optshowallclick
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/optshowallclick" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> optshowallclick(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: optshowallclick and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.optshowallclick(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: optshowallclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: optshowallclick()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method txtcusipchange
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtcusipchange" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> txtcusipchange(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtcusipchange and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.txtcusipchange(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtcusipchange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtcusipchange()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method txtcusipkeypress
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtcusipkeypress" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> txtcusipkeypress(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtcusipkeypress and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.txtcusipkeypress(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtcusipkeypress and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtcusipkeypress()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method txtnamechange
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txtnamechange" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> txtnamechange(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txtnamechange and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.txtnamechange(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txtnamechange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txtnamechange()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
    /*
     * Method txttickersymbolchange
     * @param frmnonsfgheldfundsBOReq
     * @return frmnonsfgheldfundsBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/txttickersymbolchange" , method = RequestMethod.POST)
    public List<FrmNonSFGheldFundsBO> txttickersymbolchange(FrmNonSFGheldFundsBO frmnonsfgheldfundsBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: txttickersymbolchange and argument : "+frmnonsfgheldfundsBOReq); 
        List<FrmNonSFGheldFundsBO> frmnonsfgheldfundsBOResp =  new ArrayList<FrmNonSFGheldFundsBO>();
        try{
            frmnonsfgheldfundsBOResp = frmnonsfgheldfundsService.txttickersymbolchange(frmnonsfgheldfundsBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: txttickersymbolchange and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: txttickersymbolchange()and return : "+frmnonsfgheldfundsBOResp);
        return frmnonsfgheldfundsBOResp;
    }
}