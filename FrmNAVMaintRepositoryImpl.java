package com.sic.tasa.repositories.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.orm.hibernate4.HibernateTemplate;
import org.springframework.stereotype.Repository;

import com.sic.tasa.dataobject.FrmNAVMaintBO;
import com.sic.tasa.dataobject.FrmSEIMaintBO;
import com.sic.tasa.exceptions.TASADataAccessException;
import com.sic.tasa.repositories.IFrmNAVMaintRepository;
import com.sic.tasa.util.AtmaLogger;


/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@Repository
public class FrmNAVMaintRepositoryImpl implements IFrmNAVMaintRepository{

    private static AtmaLogger LOGGER = AtmaLogger.create(FrmNAVMaintRepositoryImpl.class.getName());

    private HibernateTemplate template;


    /*
	 * Method getsource1
	 * @param frmnavmaintBOReq
	 * @return frmnavmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNAVMaintBO> getsource1(FrmNAVMaintBO frmnavmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: getsource1 and argument : "+frmnavmaintBOReq); 
	    List<FrmNAVMaintBO> frmnavmaintBOResp =new ArrayList<FrmNAVMaintBO>();
	    String sql = "Select D.DESCP as DESCP from E_INVST_INSTRUMENT_NAV E , RP_NAV_SRC_PRIORITY P,RP_NAV_DIVIDEND_SRC_TYPE D where E.RP_NAV_SRC_PRIORITY_SEQ = R.RP_NAV_SRC_PRIORITY_SEQ and D.RP_NAV_DIVIDEND_SRC_TYPE_CD = P.RP_NAV_DIVIDEND_SRC_TYPE_CD";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnavmaintBOResp); 
	    	
	    	FrmNAVMaintBO bo = new FrmNAVMaintBO();
	    	frmnavmaintBOResp.add(bo);
	    	
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: getsource1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: getsource1()"+"return : "+frmnavmaintBOResp);
         return frmnavmaintBOResp;
    }
    /*
	 * Method cmdaddClick1
	 * @param frmnavmaintBOReq
	 * @return frmnavmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNAVMaintBO> cmdaddClick1(FrmNAVMaintBO frmnavmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdaddClick1 and argument : "+frmnavmaintBOReq); 
	    List<FrmNAVMaintBO> frmnavmaintBOResp =new ArrayList<FrmNAVMaintBO>();
//	    String sql = "INSERT into e_invst_instrument_nav ("+
//	    		            "e_invst_instrument_seq, "+
//	    		            "market_closing_dt, "+
//	    		            "nav_amt, "+
//	    		            "audited_nav_amt,_"+
//	    		            "audited_nav_notified_dt) "+
//	    		            "VALUES( "cboInvstInstSeq.Text,+
//	    		            "to_date('"As_Of_Date, "mm/dd/yyyy") & "','MM/DD/YYYY') , "
//	    		            txtUnauditedRate.Text ;
	   try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnavmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdaddClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdaddClick1()"+"return : "+frmnavmaintBOResp);
         return frmnavmaintBOResp;
    }
    /*
	 * Method cmddeleteClick1
	 * @param frmnavmaintBOReq
	 * @return frmnavmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNAVMaintBO> cmddeleteClick1(FrmNAVMaintBO frmnavmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmddeleteClick1 and argument : "+frmnavmaintBOReq); 
	    List<FrmNAVMaintBO> frmnavmaintBOResp =new ArrayList<FrmNAVMaintBO>();
	    String sql = "Update E_INVST_INSTRUMENT_NAV set AUDITED_NAV_AMT = null,Audited_Nav_Notified_dt = null where E_Invst_Instrument_Seq =cboFunds.ItemData(cboFunds.ListIndex)";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnavmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmddeleteClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmddeleteClick1()"+"return : "+frmnavmaintBOResp);
         return frmnavmaintBOResp;
    }
    /*
	 * Method cmdselectfundClick1
	 * @param frmnavmaintBOReq
	 * @return frmnavmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNAVMaintBO> cmdselectfundClick1(FrmNAVMaintBO frmnavmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdselectfundClick1 and argument : "+frmnavmaintBOReq); 
	    List<FrmNAVMaintBO> frmnavmaintBOResp =new ArrayList<FrmNAVMaintBO>();
	    String sql = "SELECT N.NAV_AMT, N.AUDITED_NAV_AMT, N.AUDITED_NAV_NOTIFIED_DT,S.DESCP FROM e_invst_instrument_nav N, RP_NAV_DIVIDEND_SRC_TYPE S WHERE e_invst_instrument_seq =  cboFunds.ItemData(cboFunds.ListIndex)  and market_closing_dt = to_date('format()(DTPAsOfDate.Value, 'mm/dd/yyyy') 'MM/DD/YYYY') AND S.RP_NAV_DIVIDEND_SRC_TYPE_CD = N.RP_NAV_DIVIDEND_SRC_TYPE_CD";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnavmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdselectfundClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdselectfundClick1()"+"return : "+frmnavmaintBOResp);
         return frmnavmaintBOResp;
    }
    /*
	 * Method populatefundcombo1
	 * @param frmnavmaintBOReq
	 * @return frmnavmaintBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmNAVMaintBO> populatefundcombo1(FrmNAVMaintBO frmnavmaintBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populatefundcombo1 and argument : "+frmnavmaintBOReq); 
	    List<FrmNAVMaintBO> frmnavmaintBOResp =new ArrayList<FrmNAVMaintBO>();
	    String sql = "SELECT full_nm, rp_mip_seq, e_invst_instrument_seq FROM"
	    		+ " rp_modified_investment_pool WHERE status_txt in ('SETUP', 'ACTIVE')"
	    		+ " and e_invst_instrument_seq is not null ORDER BY full_nm";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmnavmaintBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populatefundcombo1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populatefundcombo1()"+"return : "+frmnavmaintBOResp);
         return frmnavmaintBOResp;
    }

}