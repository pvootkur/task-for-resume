package com.sic.tasa.service.impl;

import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sic.tasa.repositories.IFrmNAVQueryRepository;
import com.sic.tasa.service.IFrmNAVQueryService;
import com.sic.tasa.exceptions.TASABusinessException;
import com.sic.tasa.dataobject.FrmNAVQueryBO;
import com.sic.tasa.util.AtmaLogger;

/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :  


@Service
public class FrmNAVQueryServiceImpl implements  IFrmNAVQueryService{

    private static final AtmaLogger LOGGER = AtmaLogger.create(FrmNAVQueryServiceImpl.class);

    @Autowired
    private IFrmNAVQueryRepository frmnavqueryRepository;

    public void setFrmNAVQueryRepository(IFrmNAVQueryRepository frmnavqueryRepository) {
        this.frmnavqueryRepository = frmnavqueryRepository;
    }


	/**
	 * Method cbofundsclick
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> cbofundsclick(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cbofundsclick()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
//	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
//  //   when a fund is selected, clear the listview, set the hidden combo boxes for
//  //   e_invst_instrument_seq and mip_seq to the same entry as the fund name.  Disable
//  //   the export to excel command button because there is no data to export now.
//    lvwhistory(.getListitems().getClear());
//        cboInvstSeq.ListIndex=cboFunds.ListIndex;
//        cboMIPSeq.ListIndex=cboFunds.ListIndex;
//        cmdExport=false;
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: cbofundsclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cbofundsclick()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }
	/**
	 * Method cmdcloseclick
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> cmdcloseclick(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cmdcloseclick()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
//	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdcloseclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cmdcloseclick()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }
	/**
	 * Method cmdexportclick
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> cmdexportclick(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cmdexportclick()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
//	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
//ListItem itmDonors;
//Excel.Worksheet wSheet;
//Excel.Workbook wBook;
//Integer intRow;
//Integer intI;
//Integer intlen;
//Excel.Application appExcel;
//String strFileName;
//        wSheet.Columns.ColumnWidth=12;
//        wSheet.Columns.Font.Size=10;
//        wSheet.Cells(, 2).ColumnWidth=40;
//        wSheet.Cells(, 12).ColumnWidth=40;
//        intRow=1;
//    while(intI > lvwHistory.ListItems.Count - 1){
//        intI=intI + 1;
//    if(intRow == 1){
//  //  headers
//        wSheet.Cells(intRow, 1).toString()="NAV/Dividend/Adjustment Factor History";
//        .Font.Size=12;
//        .Font.Bold=true;
//        .Font.Underline=true;
//        intRow=intRow + 2;
//        wSheet.Cells(intRow, 1).toString()="Date";
//        wSheet.Cells(intRow, 2).toString()="Fund";
//        wSheet.Cells(intRow, 3).toString()="Unaudited NAV";
//        wSheet.Cells(intRow, 4).toString()="Audited NAV";
//        wSheet.Cells(intRow, 5).toString()="*";
//        wSheet.Cells(intRow, 6).toString()="Div Type";
//        wSheet.Cells(intRow, 7).toString()="Est Div Rate";
//        wSheet.Cells(intRow, 8).toString()="Actual Div Rate";
//        wSheet.Cells(intRow, 9).toString()="Shares";
//        wSheet.Cells(intRow, 10).toString()="Dollars";
//        wSheet.Cells(intRow, 11).toString()="Adj Factor";
//        wSheet.Cells(intRow, 12).toString()="Adj Reason";
//        .Font.Size=12;
//        .Font.Bold=true;
//        .Font.Underline=true;
//        intRow=intRow + 1;
//		}
//        wSheet.Cells(intRow, 1)=.ListItems(intI);
//        wSheet.Cells(intRow, 2)=.ListItems(intI).SubItems(1);
//        wSheet.Cells(intRow, 3)=.ListItems(intI).SubItems(2);
//        wSheet.Cells(intRow, 4)=.ListItems(intI).SubItems(3);
//        wSheet.Cells(intRow, 5)=.ListItems(intI).SubItems(4);
//        wSheet.Cells(intRow, 6)=.ListItems(intI).SubItems(5);
//        wSheet.Cells(intRow, 7)=.ListItems(intI).SubItems(6);
//        wSheet.Cells(intRow, 8)=.ListItems(intI).SubItems(7);
//        wSheet.Cells(intRow, 9)=.ListItems(intI).SubItems(8);
//        wSheet.Cells(intRow, 10)=.ListItems(intI).SubItems(9);
//        wSheet.Cells(intRow, 11)=.ListItems(intI).SubItems(10);
//        wSheet.Cells(intRow, 12)=.ListItems(intI).SubItems(11);
//        intRow=intRow + 1;
//		}
//        strFileName=AppExcel.GetSaveAsFilename;
//  //   if cancel is pressed at the "SAVE AS" dialog box, the strFileName that is
//  //   returned is "False".
//    if(VBUtilFunctions.toUpper(strFileName) == "FALSE"){
//		}
//   } else{
//        appExcel.ActiveWorkbook.Saved=true;
//        intlen=VBUtilFunctions.length(strFileName) - 4;
//  //   this is allowing for the fact the user may enter the .xls extension when
//  //   they specify the name of the file to save this excel spreadsheet as.
//    if(VBUtilFunctions.toUpper(Mid(strFileName, intlen, 4)) == ".XLS"){
//    appexcel(.getActiveworkbook().getSaveasStrfilename());
//		}
//   } else{
//    appexcel(.ActiveWorkbook.SaveAs strFileName & "xls");
//		}
//        appExcel.Visible=true;
//  //  Terminate Excel
//    appexcel(.getActiveworkbook().getCloseSavechanges:=false());
//    appexcel(.getQuit());
//    MsgBox(Err.Description);
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdexportclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cmdexportclick()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }
  //  **********************************************************************
  //  
  //  
  //  
  //   Modifications:
  //   ---------- --------  ------------------------------------------------
  //   05/03/2005 ksullens  Added link between RP_MIP_DIVIDEND_DETAIL and
  //                        RP_MODIFIED_INVESTMENT_POOL so that only the
  //                        selected fund would be returned by the query.
  //                        It was previously returning rows for both the
  //                        DB and DC funds.
  //   09/29/2006 svarghes Added an extra where condition to the query strSQL
  //                        populating rstNAV to filter out some duplicate
  //                       records
  //  *********************************************************************
	/**
	 * Method cmdselectclick
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> cmdselectclick(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: cmdselectclick()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
//	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
//String strSQL;
//String strFundName;
//ADODB.Recordset rstNAV;
//ADODB.Recordset rstDividend;
//ADODB.Recordset rstAdjFactor;
//ListItem itmHistory;
//Date dteFrom;
//Date dteTo;
//Integer intI;
//    if(==Null(.DTPFromDate.Value) Or ==Null(.DTPToDate.Value)){
//		}
// }   else if(.DTPFromDate.Value > .DTPToDate.Value){
//    MsgBox("From date cannot be after the To date");
//		}
//  //   if the from date is not selected then the default is to do a 90 days
//  //   previous search.  if the To date is not entered, the default is current date
//    if(==Null(.DTPFromDate.Value) && ==Null(.DTPToDate.Value)){
//        dteTo=Now;
//        dteFrom=Now - 90;
//		}
// }   else if(==Null(.DTPFromDate.Value)){
//        dteTo=.DTPToDate.Value;
//        dteFrom=.DTPToDate.Value - 90;
//		}
// }   else if(==Null(.DTPToDate.Value)){
//        dteTo=Now;
//        dteFrom=.DTPFromDate.Value;
//		}
//   } else{
//        dteTo=.DTPToDate.Value;
//        dteFrom=.DTPFromDate.Value;
//		}
//  //  svarghes 09/29/2006
//  //  added the where and clause AND   rmdd.rp_mip_seq = rmip.rp_mip_seq  "
//  //  to filter out some duplicate records
//        strSQL=" select eein.e_invst_instrument_seq" +                 ",eein.market_closing_dt " +                 ",eein.nav_amt " +                 ",eein.audited_nav_amt" +                 ",eein.audited_nav_notified_dt " +                 ",rmip.full_nm" +                 ",rmip.rp_mip_seq " +                 ",dd.dividend_type_cd" +                 ",dd.estimated_dividend_rt " +                 ",dd.actual_dividend_rt" +                 ",dd.as_of_dt " +                 ",rmdd.accr_dividend_amt " +            " FROM dividend_detail dd" +                 ",e_invst_instrument_nav eein " +                 ",rp_modified_investment_pool rmip " +                 ",rp_mip_dividend_detail rmdd " +           " WHERE eein.market_closing_dt >= " +                 " to_date('" + format()(dteFrom, "mmddyyyy") + "', 'mmddyyyy') " +             " AND eein.market_closing_dt <= " +                 " to_date('" + format()(dteTo, "mmddyyyy") + "', 'mmddyyyy') " +             " AND eein.e_invst_instrument_seq = rmip.e_invst_instrument_seq  " +             " AND eein.e_invst_instrument_seq = dd.e_invst_instrument_seq(+) " +             " AND eein.market_closing_dt = dd.as_of_dt(+) " +             "  AND   rmdd.rp_mip_seq = rmip.rp_mip_seq  " +             " AND rmdd.dividend_detail_seq = dd.dividend_detail_seq ";
//  //   if a specific fund was selected, further limit the data that is brought
//  //   back by including key fields for e_invst_instrument_seq and mip_seq
//    if(.cboFunds.ListIndex > 0){
//        strSQL=strSQL +            "and eein.e_invst_instrument_seq = " + .cboInvstSeq.Text +            " and rmip.rp_mip_seq = " + .cboMIPSeq.Text +            " AND rmdd.rp_mip_seq = rmip.rp_mip_seq ";
//		}
//  //   the order by clause is dependent on which radio button is selected.
//  //   the default sort order is by date
//    if(.optDate.Value == true){
//        strSQL=strSQL + " order by eein.market_closing_dt desc, " +                " rmip.full_nm, dd.dividend_type_cd";
//		}
//   } else{
//        strSQL=strSQL + " order by rmip.full_nm, dd.dividend_type_cd, " +                "eein.market_closing_dt desc";
//		}
//    populateLvwhistory(rstnav);
//    rstnav(.getClose());
//        strSQL=" select uvaf.adjustment_rt," +                  " uvaf.rp_mip_seq, uvaf.as_of_dt, " +                  " uart.descp," +                  " rmip.full_nm " +              "FROM unit_value_adjust_factor uvaf " +                  ",uv_adjust_reason_type uart " +                  ",rp_modified_investment_pool rmip " +            " WHERE uvaf.as_of_dt >= " +                    "to_date('" + format()(dteFrom, "mmddyyyy") + "', 'mmddyyyy') " +              " AND uvaf.as_of_dt <= " +                    "to_date('" + format()(dteTo, "mmddyyyy") + "', 'mmddyyyy') " +              " AND uvaf.uv_adjust_reason_type_cd = uart.uv_adjust_reason_type_cd " +              " AND rmip.rp_mip_seq = uvaf.rp_mip_seq ";
//    if(.cboFunds.ListIndex > 0){
//        strSQL=strSQL + "and uvaf.rp_mip_seq = " + .cboMIPSeq.Text;
//		}
//        strSQL=strSQL + " order by uvaf.rp_mip_seq, uvaf.as_of_dt";
//    addAdjfactorLvwhistory(rstadjfactor);
//    rstadjfactor(.getClose());
//  //          strSQL = "select distinct rmip.full_nm, rmip.rp_mip_seq, " & _
//            "dd.dividend_type_cd, dd.estimated_dividend_rt, " & _
//            "dd.actual_dividend_rt, DECODE(RMIP.rp_mip_seq,RMDD.rp_mip_seq, " & _
//            "RMDD.dividend_share_nbr) dividend_share_nbr, " & _
//            "DECODE(RMIP.rp_mip_seq,RMDD.rp_mip_seq, " & _
//            "RMDD.dividend_share_dollar_amt) dividend_share_dollar_amt, " & _
//            "dd.as_of_dt, dd.e_invst_instrument_seq " & _
//            "from dividend_detail dd, rp_modified_investment_pool rmip, " & _
//            "rp_mip_dividend_detail rmdd " & _
//            "where dd.as_of_dt >= " & _
//                "to_date(" & Format(dteFrom, "mmddyyyy") & ", mmddyyyy) " & _
//            "and dd.as_of_dt <= " & _
//                "to_date(" & Format(dteTo, "mmddyyyy") & ", mmddyyyy) "
//  //  
//  //          If .cboFunds.ListIndex > 0 Then
//  //              strSQL = strSQL & _
//                "and dd.e_invst_instrument_seq = " & .cboInvstSeq.Text & _
//                " and rmip.rp_mip_seq = " & .cboMIPSeq.Text
//  //          End If
//  //  
//  //          strSQL = strSQL & " and dd.e_invst_instrument_seq = " & _
//            "rmip.e_invst_instrument_seq " & _
//            " and dd.dividend_detail_seq = rmdd.dividend_detail_seq "
//  //  
//  //          If .optDate.Value = True Then
//  //              strSQL = strSQL & "order by dd.as_of_dt desc, " & _
//                " rmip.full_nm, dd.dividend_type_cd"
//  //          Else
//  //              strSQL = strSQL & "order by rmip.full_nm, dd.dividend_type_cd, " & _
//                "dd.as_of_dt desc"
//  //          End If
//  //          strSQL = "select distinct rmdd.rp_mip_seq, " & _
//            "dd.dividend_type_cd, dd.estimated_dividend_rt, " & _
//            "dd.actual_dividend_rt, rmdd.dividend_share_nbr, " & _
//            "rmdd.dividend_share_dollar_amt, " & _
//            "dd.as_of_dt, dd.e_invst_instrument_seq " & _
//            "from dividend_detail dd, rp_mip_dividend_detail rmdd " & _
//            "where dd.as_of_dt >= " & _
//                "to_date(" & Format(dteFrom, "mmddyyyy") & ", mmddyyyy) " & _
//            "and dd.as_of_dt <= " & _
//                "to_date(" & Format(dteTo, "mmddyyyy") & ", mmddyyyy) "
//  //  
//  //          If .cboFunds.ListIndex > 0 Then
//  //              strSQL = strSQL & _
//                "and dd.e_invst_instrument_seq = " & .cboInvstSeq.Text
//  //          End If
//  //  
//  //          strSQL = strSQL & " and dd.dividend_detail_seq = rmdd.dividend_detail_seq "
//  //  
//  //          If .optDate.Value = True Then
//  //              strSQL = strSQL & "order by dd.as_of_dt desc, dd.dividend_type_cd"
//  //          Else
//  //              strSQL = strSQL & "order by dd.dividend_type_cd, dd.as_of_dt desc"
//  //          End If
//frmnavqueryBOResp = frmnavqueryRepository.cmdselectClick1(frmnavqueryBOReq);
//    if(.cboFunds.ListIndex > 0){
//        strSQL=strSQL +                "and dd.e_invst_instrument_seq = " + .cboInvstSeq.Text +                " and rmip.rp_mip_seq = " + .cboMIPSeq.Text;
//		}
//        strSQL=strSQL + " and dd.e_invst_instrument_seq = " +            "rmip.e_invst_instrument_seq ";
//    if(.optDate.Value == true){
//        strSQL=strSQL + "order by dd.as_of_dt desc, " +                " rmip.full_nm, dd.dividend_type_cd";
//		}
//   } else{
//        strSQL=strSQL + "order by rmip.full_nm, dd.dividend_type_cd, " +                "dd.as_of_dt desc";
//		}
//    addDividendLvwhistory(rstdividend);
//    rstdividend(.getClose());
//  //   the order of the columns in the listview depends on which sort order
//  //   was selected.
//    if(.optDate.Value == true){
//        .lvwHistory.ColumnHeaders(1)="Date";
//        .lvwHistory.ColumnHeaders(2)="Fund";
//		}
//   } else{
//        .lvwHistory.ColumnHeaders(1)="Fund";
//        .lvwHistory.ColumnHeaders(2)="Date";
//		}
//    if(.chkAdjFactor.Value == Checked Or .chkDividend.Value == Checked){
//		}
//   } else{
//		}
//  //   if either check box to show dividend values or adjustment factor values
//  //   is checked then this process will remove rows from the listview that do not
//  //  meet the selection criteria.
//    for(StringIntI = .lvwHistory.ListItems.Count; 1; -1){
//    if(chkAdjFactor.Value == Checked && chkDividend.Value == Checked){
//    if(.SubItems(5) == "" && .SubItems(6) == "" && .SubItems(8) == "" &&                            .SubItems(9) == "" && .SubItems(10) == "" &&                            .SubItems(11) == "" && .SubItems(12) == ""){
//    lvwhistory(.getListitems().getRemove(inti));
//		}
//		}
// }   else if(chkAdjFactor.Value == Unchecked && chkDividend.Value == Checked){
//    if(.SubItems(5) == "" && .SubItems(6) == "" && .SubItems(8) == "" &&                            .SubItems(9) == "" && .SubItems(10) == ""){
//    lvwhistory(.getListitems().getRemove(inti));
//		}
//		}
//   } else{
//    if(.SubItems(11) == "" && .SubItems(12) == ""){
//    lvwhistory(.getListitems().getRemove(inti));
//		}
//		}
//		}
//  //   since data may have been added to the listview after the initial pass,
//  //   re-sort the listview based on the hidden KEY column.
//        .cmdExport=true;
//        .lvwHistory.Sorted=true;
//        .lvwHistory.SortKey=12;
//    if(.optDate.Value == true){
//        .lvwHistory.SortOrder=lvwDescending;
//		}
//   } else{
//        .lvwHistory.SortOrder=lvwAscending;
//		}
//    for(StringIntI = 1; .lvwHistory.ListItems.Count; i++){
//    if(.optDate.Value == true){
//    if(.lvwHistory.ListItems(intI).SubItems(1) == strFundName){
//        .lvwHistory.ListItems(intI).SubItems(1)="";
//		}
//   } else{
//        strFundName=.lvwHistory.ListItems(intI).SubItems(1);
//		}
//		}
//   } else{
//    if(.lvwHistory.ListItems(intI).Text == strFundName){
//        .lvwHistory.ListItems(intI)="";
//		}
//   } else{
//        strFundName=.lvwHistory.ListItems(intI);
//		}
//		}
//		}
//    MsgBox(Err.Description);
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdselectclick()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: cmdselectclick()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }
	/**
	 * Method formactivate
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> formactivate(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: formactivate()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
//	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
//    dtpfromdate(.getSetfocus());
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: formactivate()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: formactivate()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }
	/**
	 * Method formload
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> formload(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: formload()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
//	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
//String strSQL;
//ADODB.Recordset rstFunds;
//        .DTPFromDate.MaxDate=Now;
//        .DTPToDate.MaxDate=Now;
//        .optDate.Value=true;
//frmnavqueryBOResp = frmnavqueryRepository.formLoad1(frmnavqueryBOReq);
//  //   add a default item to the combo boxes in case the user wants to process
//  //   all funds instead of a selected fund
//    while(rstFunds.EOF){
//    rstfunds(.getMovenext());
//		}
//  //  deafult fund selection value to "All Funds"
//        .cboFunds.ListIndex=0;
//    rstfunds(.getClose());
//    MsgBox(Err.Description);
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: formload()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: formload()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }
	/**
	 * Method formunload
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> formunload(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: formunload()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
//	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: formunload()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: formunload()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }
	/**
	 * Method populatelvwhistory
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> populatelvwhistory(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: populatelvwhistory()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
////	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
//ListItem itmHistory;
//    while(rstNAV.EOF){
//    if(.optDate.Value == true){
//        itmHistory.SubItems(1)=rstNAV!full_nm;
//		}
//   } else{
//        itmHistory.SubItems(1)=format()(rstNAV!market_closing_dt, "mm/dd/yyyy");
//		}
//    if(==Null(rstNAV!nav_amt)){
//        itmHistory.SubItems(2)="";
//		}
//   } else{
//        itmHistory.SubItems(2)=format()(rstNAV!nav_amt, "0.00##");
//		}
//    if(==Null(rstNAV!audited_nav_amt)){
//        itmHistory.SubItems(3)="";
//		}
//   } else{
//        itmHistory.SubItems(3)=format()(rstNAV!audited_nav_amt, "0.00##");
//		}
//    if(==Null(rstNAV!audited_nav_notified_dt)){
//        itmHistory.SubItems(4)="";
//		}
//   } else{
//        itmHistory.SubItems(4)="*";
//		}
//    if(==Null(rstNAV!dividend_type_cd)){
//        itmHistory.SubItems(5)="";
//		}
//   } else{
//        itmHistory.SubItems(5)=rstNAV!dividend_type_cd;
//		}
//    if(==Null(rstNAV!estimated_dividend_rt)){
//        itmHistory.SubItems(6)="";
//		}
//   } else{
//        itmHistory.SubItems(6)=rstNAV!estimated_dividend_rt;
//		}
//    if(==Null(rstNAV!accr_dividend_amt)){
//        itmHistory.SubItems(7)="";
//		}
//   } else{
//        itmHistory.SubItems(7)=format()(rstNAV!accr_dividend_amt, "0.00##");
//		}
//    if(==Null(rstNAV!actual_dividend_rt)){
//        itmHistory.SubItems(8)="";
//		}
//   } else{
//        itmHistory.SubItems(8)=rstNAV!actual_dividend_rt;
//		}
//    if(.optDate.Value == true){
//        itmHistory.SubItems(13)=format()(rstNAV!market_closing_dt, "yyyymmdd") +                rstNAV!full_nm;
//    if(==Null(rstNAV!dividend_type_cd)){
//		}
//   } else{
//        itmHistory.SubItems(13)=itmHistory.SubItems(13) +                    rstNAV!dividend_type_cd;
//		}
//		}
//   } else{
//        itmHistory.SubItems(13)=rstNAV!full_nm;
//    if(==Null(rstNAV!dividend_type_cd)){
//        itmHistory.SubItems(13)=itmHistory.SubItems(13) +                    format()(rstNAV!market_closing_dt, "yyyymmdd");
//		}
//   } else{
//        itmHistory.SubItems(13)=itmHistory.SubItems(13) +                    rstNAV!dividend_type_cd + format()(rstNAV!market_closing_dt, "yyyymmdd");
//		}
//		}
//        itmHistory.SubItems(14)=rstNAV!E_INVST_INSTRUMENT_SEQ;
//        itmHistory.SubItems(15)=rstNAV!rp_mip_seq;
//        itmHistory.SubItems(16)=format()(rstNAV!market_closing_dt, "mm/dd/yyyy");
//    rstnav(.getMovenext());
//		}
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: populatelvwhistory()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: populatelvwhistory()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }
	/**
	 * Method addadjfactorlvwhistory
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> addadjfactorlvwhistory(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: addadjfactorlvwhistory()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
//	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
//ListItem itmHistory;
//Integer intAdjFactor;
//Boolean blnFound;
//    while(rstAdjFactor.EOF){
//        blnFound=false;
//    for(StringIntAdjFactor = 1; .lvwHistory.ListItems.Count; i++){
//    if(rstAdjFactor!rp_mip_seq ==                        .lvwHistory.ListItems(intAdjFactor).SubItems(15) &&                        format()(rstAdjFactor!as_of_dt, "mm/dd/yyyy") ==                        .lvwHistory.ListItems(intAdjFactor).SubItems(16)){
//    if(==Null(rstAdjFactor!adjustment_rt)){
//        .lvwHistory.ListItems(intAdjFactor).SubItems(11)="";
//		}
//   } else{
//        .lvwHistory.ListItems(intAdjFactor).SubItems(11)=rstAdjFactor!adjustment_rt;
//		}
//    if(==Null(rstAdjFactor!descp)){
//        .lvwHistory.ListItems(intAdjFactor).SubItems(12)="";
//		}
//   } else{
//        .lvwHistory.ListItems(intAdjFactor).SubItems(12)=rstAdjFactor!descp;
//		}
//        blnFound=true;
//		}
//		}
//    if(blnFound == false){
//    if(.optDate.Value == true){
//        itmHistory.SubItems(1)=rstAdjFactor!full_nm;
//		}
//   } else{
//        itmHistory.SubItems(1)=format()(rstAdjFactor!as_of_dt, "mm/dd/yyyy");
//		}
//    if(==Null(rstAdjFactor!adjustment_rt)){
//        itmHistory.SubItems(11)="";
//		}
//   } else{
//        itmHistory.SubItems(11)=rstAdjFactor!adjustment_rt;
//		}
//    if(==Null(rstAdjFactor!descp)){
//        itmHistory.SubItems(12)="";
//		}
//   } else{
//        itmHistory.SubItems(12)=rstAdjFactor!descp;
//		}
//    if(.optDate.Value == true){
//        itmHistory.SubItems(13)=format()(rstAdjFactor!as_of_dt, "yyyymmdd") +                        rstAdjFactor!full_nm;
//		}
//   } else{
//        itmHistory.SubItems(13)=rstAdjFactor!full_nm +                        format()(rstAdjFactor!as_of_dt, "yyyymmdd");
//		}
//        itmHistory.SubItems(15)=rstAdjFactor!rp_mip_seq;
//        itmHistory.SubItems(16)=format()(rstAdjFactor!as_of_dt, "mm/dd/yyyy");
//		}
//    rstadjfactor(.getMovenext());
		//}
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: addadjfactorlvwhistory()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: addadjfactorlvwhistory()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }
	/**
	 * Method adddividendlvwhistory
	 * @param frmnavqueryBOReq
	 * @return frmnavqueryBOResp
	 * @throws TASABusinessException
	 */
    public List<FrmNAVQueryBO> adddividendlvwhistory(FrmNAVQueryBO frmnavqueryBOReq) throws TASABusinessException{
	      LOGGER.debug("Entering into the method: adddividendlvwhistory()"+"argument : "+frmnavqueryBOReq); 
	      List<FrmNAVQueryBO> frmnavqueryBOResp = null;
	      try{
//	          frmnavqueryBOResp =  new ArrayList<FrmNAVQueryBO>();   
//ListItem itmHistory;
//Integer intDividend;
//Boolean blnFound;
//ADODB.Recordset rstDividendDetail;
//String strSQL;
//    while(rstDividend.EOF){
//        blnFound=false;
//    for(StringIntDividend = 1; .lvwHistory.ListItems.Count; i++){
//    if(rstDividend!rp_mip_seq ==                        .lvwHistory.ListItems(intDividend).SubItems(15) &&                        format()(rstDividend!as_of_dt, "mm/dd/yyyy") ==                        .lvwHistory.ListItems(intDividend).SubItems(16) &&                        rstDividend!dividend_type_cd ==                        .lvwHistory.ListItems(intDividend).SubItems(5)){
//frmnavqueryBOResp = frmnavqueryRepository.addDividendLvwhistory1(frmnavqueryBOReq);
//    if(rstDividendDetail.BOF && rstDividendDetail.EOF){
//        .lvwHistory.ListItems(intDividend).SubItems(9)="";
//        .lvwHistory.ListItems(intDividend).SubItems(10)="";
//		}
//   } else{
//    if(==Null(rstDividendDetail!dividend_share_nbr)){
//        .lvwHistory.ListItems(intDividend).SubItems(9)="";
//		}
//   } else{
//        .lvwHistory.ListItems(intDividend).SubItems(9)=format()(rstDividendDetail!dividend_share_nbr, "0.000");
//		}
//    if(==Null(rstDividendDetail!dividend_share_dollar_amt)){
//        .lvwHistory.ListItems(intDividend).SubItems(10)="";
//		}
//   } else{
//        .lvwHistory.ListItems(intDividend).SubItems(10)=format()(rstDividendDetail!dividend_share_dollar_amt, "0.00");
//		}
//		}
//        blnFound=true;
//		}
//		}
//    if(blnFound == false){
//frmnavqueryBOResp = frmnavqueryRepository.addDividendLvwhistory2(frmnavqueryBOReq);
//    if(.optDate.Value == true){
//        itmHistory.SubItems(1)=rstDividend!full_nm;
//		}
//   } else{
//        itmHistory.SubItems(1)=format()(rstDividend!as_of_dt, "mm/dd/yyyy");
//		}
//    if(==Null(rstDividend!dividend_type_cd)){
//        .lvwHistory.ListItems(intDividend).SubItems(5)="";
//		}
//   } else{
//        .lvwHistory.ListItems(intDividend).SubItems(5)=rstDividend!dividend_type_cd;
//		}
//    if(==Null(rstDividend!estimated_dividend_rt)){
//        .lvwHistory.ListItems(intDividend).SubItems(6)="";
//		}
//   } else{
//        .lvwHistory.ListItems(intDividend).SubItems(6)=rstDividend!estimated_dividend_rt;
//		}
//    if(==Null(rstDividend!actual_dividend_rt)){
//        .lvwHistory.ListItems(intDividend).SubItems(8)="";
//		}
//   } else{
//        .lvwHistory.ListItems(intDividend).SubItems(8)=rstDividend!actual_dividend_rt;
//		}
//    if(rstDividendDetail.BOF && rstDividendDetail.EOF){
//        itmHistory.SubItems(9)="";
//        itmHistory.SubItems(10)="";
//		}
//   } else{
//    if(==Null(rstDividendDetail!dividend_share_nbr)){
//        itmHistory.SubItems(9)="";
//		}
//   } else{
//        itmHistory.SubItems(9)=format()(rstDividendDetail!dividend_share_nbr, "0.000");
//		}
//    if(==Null(rstDividendDetail!dividend_share_dollar_amt)){
//        itmHistory.SubItems(10)="";
//		}
//   } else{
//        itmHistory.SubItems(10)=format()(rstDividendDetail!dividend_share_dollar_amt, "0.00");
//		}
//		}
//    if(.optDate.Value == true){
//        itmHistory.SubItems(13)=format()(rstDividend!as_of_dt, "yyyymmdd") +                        rstDividend!full_nm;
//		}
//   } else{
//        itmHistory.SubItems(13)=rstDividend!full_nm +                        format()(rstDividend!as_of_dt, "yyyymmdd");
//		}
//        itmHistory.SubItems(14)=rstDividend!E_INVST_INSTRUMENT_SEQ;
//        itmHistory.SubItems(15)=rstDividend!rp_mip_seq;
//        itmHistory.SubItems(16)=format()(rstDividend!as_of_dt, "mm/dd/yyyy");
//    rstdividenddetail(.getClose());
//		}
//    rstdividend(.getMovenext());
//		}
        }catch (Exception ex){
            LOGGER.error("Error occurred in method: adddividendlvwhistory()"+"and terminated due to " + ex.getMessage());
            throw new TASABusinessException(ex);
        }
        LOGGER.debug("Exiting the method: adddividendlvwhistory()"+"return : "+frmnavqueryBOResp);
        return frmnavqueryBOResp;
        }

}