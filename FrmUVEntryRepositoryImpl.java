package com.sic.tasa.repositories.impl;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.annotations.Where;
import org.springframework.orm.hibernate4.HibernateTemplate;
import org.springframework.stereotype.Repository;

import com.sic.tasa.dataobject.FrmUVEntryBO;
import com.sic.tasa.exceptions.TASADataAccessException;
import com.sic.tasa.repositories.IFrmUVEntryRepository;
import com.sic.tasa.util.AtmaLogger;

/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@Repository
public class FrmUVEntryRepositoryImpl implements IFrmUVEntryRepository{

    private static final AtmaLogger LOGGER = AtmaLogger.create(FrmUVEntryRepositoryImpl.class);

    private HibernateTemplate template;


    /*
	 * Method populatecontract1
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmUVEntryBO> populatecontract1() throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populatecontract1"); 
	    List<FrmUVEntryBO> frmuventryBOResp =new ArrayList<FrmUVEntryBO>();
	    String sql = "Select rp_contract_id, Legal_plan_nm from RP_Contract C, RP_PLAN P" +
           " where C.RP_PLAN_ID = P.RP_PLAN_ID and contract_status in ('ACTIVE', 'UNSIGNED', 'PEND TERM')  " +
           " order by  rp_contract_Id ";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmuventryBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populatecontract1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populatecontract1()"+"return : "+frmuventryBOResp);
         return frmuventryBOResp;
    }
    /*
	 * Method populatefunds1
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmUVEntryBO> populatefunds1(FrmUVEntryBO frmuventryBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: populatefunds1 and argument : "+frmuventryBOReq); 
	    List<FrmUVEntryBO> frmuventryBOResp =new ArrayList<FrmUVEntryBO>();
	    String sql = "select RPD.descp, CSRPD.RP_CPSRPD_FUND_SEQ from RP_RPD_FUND RPD, RP_PSRPD_FUND PSRPD, " +
             " RP_CPSRPD_FUND CSRPD, RP_CONTRACT  RPC Where RP_CONTRACT_ID = '" +
             frmuventryBOReq.getCboContract() + "' and RP_CONTRACT_ID = CSRPD.CNTRCT_NBR_ID and " +
             "PSRPD.RP_PSRPD_FUND_SEQ = CSRPD.RP_PSRPD_FUND_SEQ and PSRPD.RP_RPD_FUND_SEQ = " +
             "RPD.RP_RPD_FUND_SEQ and CSRPD.cntrct_fund_status_cd = 'A'";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmuventryBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: populatefunds1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: populatefunds1()"+"return : "+frmuventryBOResp);
         return frmuventryBOResp;
    }
    /*
	 * Method cmdaddmodifyClick1
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmUVEntryBO> cmdaddmodifyClick1(FrmUVEntryBO frmuventryBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdaddmodifyClick1 and argument : "+frmuventryBOReq); 
	    List<FrmUVEntryBO> frmuventryBOResp =new ArrayList<FrmUVEntryBO>();
	    String sql = "Update rp_cntrct_unit_val_ovrrd set Unit_Value = " +
	    		frmuventryBOReq.getTxtUVOverride() + " where AS_OF_DT = to_date('" + frmuventryBOReq.getTxtTodayDate()  + //Format(Me.txtTodayDate, "mm/dd/yyyy")
                "', 'mm/dd/yyyy')  and RP_CPSRPD_FUND_SEQ = "  + frmuventryBOReq.getCboFund() ; //cboFund.ItemData(cboFund.ListIndex)
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmuventryBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdaddmodifyClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdaddmodifyClick1()"+"return : "+frmuventryBOResp);
         return frmuventryBOResp;
    }
    /*
	 * Method cmdaddmodifyClick2
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmUVEntryBO> cmdaddmodifyClick2(FrmUVEntryBO frmuventryBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdaddmodifyClick2 and argument : "+frmuventryBOReq); 
	    List<FrmUVEntryBO> frmuventryBOResp =new ArrayList<FrmUVEntryBO>();
	    String sql = "Insert into rp_cntrct_unit_val_ovrrd (rp_cpsrpd_fund_seq,unit_value,as_of_dt) "+ 
                "values(" + frmuventryBOReq.getCboFund() + "," +frmuventryBOReq.getTxtUVOverride() + 
                ", to_date('" +frmuventryBOReq.getTxtTodayDate()+ "', 'mm/dd/yyyy'))";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmuventryBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdaddmodifyClick2()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdaddmodifyClick2()"+"return : "+frmuventryBOResp);
         return frmuventryBOResp;
    }
    /*
	 * Method cmddeleteClick1
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmUVEntryBO> cmddeleteClick1(FrmUVEntryBO frmuventryBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmddeleteClick1 and argument : "+frmuventryBOReq); 
	    List<FrmUVEntryBO> frmuventryBOResp =new ArrayList<FrmUVEntryBO>();
	    String sql = "Delete from rp_cntrct_unit_val_ovrrd where RP_CPSRPD_FUND_SEQ =" +
	    		frmuventryBOReq.getCboFund() + " and AS_OF_DT = " +
                    " to_date('" + frmuventryBOReq.getTxtTodayDate() + "', 'mm/dd/yyyy')";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmuventryBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmddeleteClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmddeleteClick1()"+"return : "+frmuventryBOResp);
         return frmuventryBOResp;
    }
    /*
	 * Method cmdselfundClick1
	 * @param frmuventryBOReq
	 * @return frmuventryBOResp
	 * @throws TASADataAccessException
	 */
    public List<FrmUVEntryBO> cmdselfundClick1(FrmUVEntryBO frmuventryBOReq) throws TASADataAccessException {
	    LOGGER.debug("Entering into the method: cmdselfundClick1 and argument : "+frmuventryBOReq); 
	    List<FrmUVEntryBO> frmuventryBOResp =new ArrayList<FrmUVEntryBO>();
	    String sql = "Select UNIT_VALUE from rp_cntrct_unit_val_ovrrd where " +
                " RP_CPSRPD_FUND_SEQ = " + frmuventryBOReq.getCboFund() +
                " and AS_OF_DT = to_date('" + frmuventryBOReq.getTxtTodayDate() +
                "', 'mm/dd/yyyy')";
	    try {
//	         List<IDomainObj>  entityList = template.find(sql,new BeanPropertyRowMapper<IDomainObj>(<IDomainObj>.class));
//	         ObjectCopier.copy(entityList, frmuventryBOResp);  
	    }catch (Exception ex) {
            LOGGER.error("Error occurred in method: cmdselfundClick1()" +"and terminated due to " + ex.getMessage());
            throw new TASADataAccessException(ex);
        }        
        LOGGER.debug("Exiting the method: cmdselfundClick1()"+"return : "+frmuventryBOResp);
         return frmuventryBOResp;
    }

}