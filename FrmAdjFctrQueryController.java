package com.sic.tasa.rest;


import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.sic.tasa.dataobject.FrmAdjFctrQueryBO;
import com.sic.tasa.exceptions.TASARESTException;
import com.sic.tasa.service.IFrmAdjFctrQueryService;
import com.sic.tasa.util.AtmaLogger;


/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :


@RestController
@RequestMapping(value = "/FrmAdjFctrQueryController")
public class FrmAdjFctrQueryController {

    private static AtmaLogger LOGGER = AtmaLogger.create(FrmAdjFctrQueryController.class.getName());

		@Autowired
		private IFrmAdjFctrQueryService frmadjfctrqueryService;

		public void setFrmAdjFctrQueryService(IFrmAdjFctrQueryService frmadjfctrqueryService) {
		    this.frmadjfctrqueryService = frmadjfctrqueryService;
		}


    /*
     * Method cbofundsclick
     * @param frmadjfctrqueryBOReq
     * @return frmadjfctrqueryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cbofundsclick" , method = RequestMethod.POST)
    public List<FrmAdjFctrQueryBO> cbofundsclick(FrmAdjFctrQueryBO frmadjfctrqueryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cbofundsclick and argument : "+frmadjfctrqueryBOReq); 
        List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp =  new ArrayList<FrmAdjFctrQueryBO>();
        try{
            frmadjfctrqueryBOResp = frmadjfctrqueryService.cbofundsclick(frmadjfctrqueryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cbofundsclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cbofundsclick()and return : "+frmadjfctrqueryBOResp);
        return frmadjfctrqueryBOResp;
    }
    /*
     * Method cmdcloseclick
     * @param frmadjfctrqueryBOReq
     * @return frmadjfctrqueryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdcloseclick" , method = RequestMethod.POST)
    public List<FrmAdjFctrQueryBO> cmdcloseclick(FrmAdjFctrQueryBO frmadjfctrqueryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdcloseclick and argument : "+frmadjfctrqueryBOReq); 
        List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp =  new ArrayList<FrmAdjFctrQueryBO>();
        try{
            frmadjfctrqueryBOResp = frmadjfctrqueryService.cmdcloseclick(frmadjfctrqueryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdcloseclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdcloseclick()and return : "+frmadjfctrqueryBOResp);
        return frmadjfctrqueryBOResp;
    }
    /*
     * Method cmdshowcommentsclick
     * @param frmadjfctrqueryBOReq
     * @return frmadjfctrqueryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/cmdshowcommentsclick" , method = RequestMethod.POST)
    public List<FrmAdjFctrQueryBO> cmdshowcommentsclick(FrmAdjFctrQueryBO frmadjfctrqueryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: cmdshowcommentsclick and argument : "+frmadjfctrqueryBOReq); 
        List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp =  new ArrayList<FrmAdjFctrQueryBO>();
        try{
            frmadjfctrqueryBOResp = frmadjfctrqueryService.cmdshowcommentsclick(frmadjfctrqueryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: cmdshowcommentsclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: cmdshowcommentsclick()and return : "+frmadjfctrqueryBOResp);
        return frmadjfctrqueryBOResp;
    }
    /*
     * Method formload
     * @param frmadjfctrqueryBOReq
     * @return frmadjfctrqueryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/formload" , method = RequestMethod.GET)
    public List<FrmAdjFctrQueryBO> formload(FrmAdjFctrQueryBO frmadjfctrqueryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: formload and argument : "+frmadjfctrqueryBOReq); 
        List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp =  new ArrayList<FrmAdjFctrQueryBO>();
        try{
            frmadjfctrqueryBOResp = frmadjfctrqueryService.formload(frmadjfctrqueryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: formload and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: formload()and return : "+frmadjfctrqueryBOResp);
        return frmadjfctrqueryBOResp;
    }
    /*
     * Method lvwfundsitemclick
     * @param frmadjfctrqueryBOReq
     * @return frmadjfctrqueryBOResp
     * @throws TASARESTException
    */
    @RequestMapping(value = "/lvwfundsitemclick" , method = RequestMethod.POST)
    public List<FrmAdjFctrQueryBO> lvwfundsitemclick(FrmAdjFctrQueryBO frmadjfctrqueryBOReq) throws TASARESTException{    
        LOGGER.debug("Entering into the method: lvwfundsitemclick and argument : "+frmadjfctrqueryBOReq); 
        List<FrmAdjFctrQueryBO> frmadjfctrqueryBOResp =  new ArrayList<FrmAdjFctrQueryBO>();
        try{
            frmadjfctrqueryBOResp = frmadjfctrqueryService.lvwfundsitemclick(frmadjfctrqueryBOReq);
        }
        catch (Exception ex){
            LOGGER.error("Error occurred in method: lvwfundsitemclick and terminated due to " + ex.getMessage());
            throw new TASARESTException(ex);
        }
        LOGGER.debug("Exiting the method: lvwfundsitemclick()and return : "+frmadjfctrqueryBOResp);
        return frmadjfctrqueryBOResp;
    }
}