package com.sic.tasa.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestBody;

import com.sic.tasa.dataobject.FrmProductFundsBO;
import com.sic.tasa.exceptions.TASABusinessException;
import com.sic.tasa.repositories.IFrmProductFundsRepository;
import com.sic.tasa.service.IFrmProductFundsService;
import com.sic.tasa.util.AtmaLogger;

/*************************************************************************
 * 
 * SIC CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * SIC is a trademark of SIC Company.
 *
 * Copyright ? 2017 SIC. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of SIC
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SIC and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SIC.
 *
 *************************************************************************/
// Author : Generated by ATMA ?
// Revision History :

@Service
public class FrmProductFundsServiceImpl implements IFrmProductFundsService {

	private static final AtmaLogger LOGGER = AtmaLogger
			.create(FrmProductFundsServiceImpl.class);

	@Autowired
	private IFrmProductFundsRepository frmproductfundsRepository;

	public void setFrmProductFundsRepository(
			IFrmProductFundsRepository frmproductfundsRepository) {
		this.frmproductfundsRepository = frmproductfundsRepository;
	}

	// MODIFICATION LOG.
	// FEB 94 D.Szramkowski
	// A breakout of funds into Guaranteed and Equity catagories.
	// FEATURES:
	// The "as_of_dt" is the date which will print on FPU.
	// When the "as_of_dt" changes, create a row in
	// INVSTMNT_FUND_CATEGORY_HIST.
	// APR 01 C.Williams
	// The INVSTMNT_FUND_CATEGORY_HIST table was not being
	// used so Deb Jones had it dropped. When the "as_of_date"
	// changes only the INVSTMNT_FUND_CATEGORY table will be updated.
	// ------------------------------------------------------
	/**
	 * Method cmdcloseclick
	 * 
	 * @param frmproductfundsBOReq
	 * @return frmproductfundsBOResp
	 * @throws TASABusinessException
	 */
	// TODO flag has been set have to check
	// public List<FrmProductFundsBO> cmdcloseclick(FrmProductFundsBO
	// frmproductfundsBOReq) throws TASABusinessException{
	// LOGGER.debug("Entering into the method: cmdcloseclick()"+"argument : "+frmproductfundsBOReq);
	// List<FrmProductFundsBO> frmproductfundsBOResp = null;
	// try{
	// frmproductfundsBOResp = new ArrayList<FrmProductFundsBO>();
	// // sQuery="Off";
	// }catch (Exception ex){
	// LOGGER.error("Error occurred in method: cmdcloseclick()"+"and terminated due to "
	// + ex.getMessage());
	// throw new TASABusinessException(ex);
	// }
	// LOGGER.debug("Exiting the method: cmdcloseclick()"+"return : "+frmproductfundsBOResp);
	// return frmproductfundsBOResp;
	// }
	/**
	 * Method datagridaftercolupdate
	 * 
	 * @param frmproductfundsBOReq
	 * @return frmproductfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmProductFundsBO> datagridaftercolupdate(
			List<FrmProductFundsBO> frmproductfundsBOReq)
					throws TASABusinessException {
		LOGGER.debug("Entering into the method: datagridaftercolupdate()"
				+ "argument : " + frmproductfundsBOReq);
		List<FrmProductFundsBO> frmproductfundsBOResp = null;
		try {
			frmproductfundsBOResp = new ArrayList<FrmProductFundsBO>();
			// Update DataGrid info
			// TODO Handle in Angular - DataGrid
			// dataGrid.Columns("Last Updated")=format()(Date, "mm/dd/yyyy");
			// dataGrid.Columns("Updated By")=VBUtilFunctions.toUpper(sUserID);
			frmproductfundsBOResp = frmproductfundsRepository
					.datagridAftercolupdate1(frmproductfundsBOReq);
			// TODO Handle In Angular - Msg box
			// adodc(.getRefresh());
			// TODO Datagrid formation
			// formatdatagrid(frmproductfundsBOReq);
			// MsgBox("Update complete!");
			// MsgBox(Err.Description);
		} catch (Exception ex) {
			LOGGER.error("Error occurred in method: datagridaftercolupdate()"
					+ "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: datagridaftercolupdate()"
				+ "return : " + frmproductfundsBOResp);
		return frmproductfundsBOResp;
	}

	/**
	 * Method datagridbeforecolupdate
	 * 
	 * @param frmproductfundsBOReq
	 * @return frmproductfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmProductFundsBO> datagridbeforecolupdate(
			List<FrmProductFundsBO> frmproductfundsBOReq)
					throws TASABusinessException {
		LOGGER.debug("Entering into the method: datagridbeforecolupdate()"
				+ "argument : " + frmproductfundsBOReq);
		List<FrmProductFundsBO> frmproductfundsBOResp = null;
		try {
			frmproductfundsBOResp = new ArrayList<FrmProductFundsBO>();
			frmproductfundsBOResp = frmproductfundsRepository
					.datagridBeforecolupdate1(frmproductfundsBOReq);
			// update the row.
			if (frmproductfundsBOResp != null) {
				// TODO have to check
				// rs.Close
				// Set rs = Nothing
				return frmproductfundsBOResp;
			} else {
				// History row does not exsist, so set version number to 1 and
				// then
				// insert the new history row.
				// CURR_VERSION_NBR = 1
				// strSQL = " INSERT INTO INVSTMNT_FUND_CATEGORY_HIST" _
				// & " VALUES (INVSTMNT_FUND_CATEGORY_CD," _
				// & " CURR_VERSION_NBR," _
				// & " DESCP," _
				// & " AS_OF_DT," _
				// & " LAST_UPDT_DT," _
				// & " LAST_UPDT_USER_ID)"
				// cn.Execute (strSQL)
				// TODO set the values and datagrid
				// Cancel = 1
				// DataGrid.Text = OldValue
				// Me.StatusBar.SimpleText =
				// "Investment fund category not found"
			}
			// rs(.getClose());
			// MsgBox(Err.Description);
		} catch (Exception ex) {
			LOGGER.error("Error occurred in method: datagridbeforecolupdate()"
					+ "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: datagridbeforecolupdate()"
				+ "return : " + frmproductfundsBOResp);
		return frmproductfundsBOResp;
	}

	/**
	 * Method datagriderror
	 * 
	 * @param frmproductfundsBOReq
	 * @return frmproductfundsBOResp
	 * @throws TASABusinessException
	 */
	// TODO Handle in Angular - Datagrid error method which returns Zero
	// public List<FrmProductFundsBO> datagriderror(FrmProductFundsBO
	// frmproductfundsBOReq) throws TASABusinessException{
	// LOGGER.debug("Entering into the method: datagriderror()"+"argument : "+frmproductfundsBOReq);
	// List<FrmProductFundsBO> frmproductfundsBOResp = null;
	// try{
	// frmproductfundsBOResp = new ArrayList<FrmProductFundsBO>();
	// response=0;
	// }catch (Exception ex){
	// LOGGER.error("Error occurred in method: datagriderror()"+"and terminated due to "
	// + ex.getMessage());
	// throw new TASABusinessException(ex);
	// }
	// LOGGER.debug("Exiting the method: datagriderror()"+"return : "+frmproductfundsBOResp);
	// return frmproductfundsBOResp;
	// }
	/**
	 * Method datagridkeypress
	 * 
	 * @param frmproductfundsBOReq
	 * @return frmproductfundsBOResp
	 * @throws TASABusinessException
	 */
	// TODO Handle in Angular - Datagrid key press event
	// public List<FrmProductFundsBO> datagridkeypress(FrmProductFundsBO
	// frmproductfundsBOReq) throws TASABusinessException{
	// LOGGER.debug("Entering into the method: datagridkeypress()"+"argument : "+frmproductfundsBOReq);
	// List<FrmProductFundsBO> frmproductfundsBOResp = null;
	// try{
	// frmproductfundsBOResp = new ArrayList<FrmProductFundsBO>();
	// // Only able to update the As of Date
	// if(DataGrid.Col != 0){
	// keyAscii=0;
	// }
	// }catch (Exception ex){
	// LOGGER.error("Error occurred in method: datagridkeypress()"+"and terminated due to "
	// + ex.getMessage());
	// throw new TASABusinessException(ex);
	// }
	// LOGGER.debug("Exiting the method: datagridkeypress()"+"return : "+frmproductfundsBOResp);
	// return frmproductfundsBOResp;
	// }
	/**
	 * Method datagridrowcolchange
	 * 
	 * @param frmproductfundsBOReq
	 * @return frmproductfundsBOResp
	 * @throws TASABusinessException
	 */
	// TODO Handle in Angular - Datagrid row/column change event
	// public List<FrmProductFundsBO> datagridrowcolchange(FrmProductFundsBO
	// frmproductfundsBOReq) throws TASABusinessException{
	// LOGGER.debug("Entering into the method: datagridrowcolchange()"+"argument : "+frmproductfundsBOReq);
	// List<FrmProductFundsBO> frmproductfundsBOResp = null;
	// try{
	// frmproductfundsBOResp = new ArrayList<FrmProductFundsBO>();
	// String iNext;
	// // Display help info in the status bar
	// iNext=DataGrid.Col;
	// switch (iNext){
	// case 0:
	// statusBar.SimpleText="FPU ""Investment Options"" As Of Date.  Will appear on the Funds"
	// + " Performance Update.";
	// case 1:
	// statusBar.SimpleText="Description of category.";
	// case 2:
	// statusBar.SimpleText="Category of investment fund.";
	// case Else:
	// statusBar.SimpleText="";
	// }
	// }catch (Exception ex){
	// LOGGER.error("Error occurred in method: datagridrowcolchange()"+"and terminated due to "
	// + ex.getMessage());
	// throw new TASABusinessException(ex);
	// }
	// LOGGER.debug("Exiting the method: datagridrowcolchange()"+"return : "+frmproductfundsBOResp);
	// return frmproductfundsBOResp;
	// }
	/**
	 * Method formload
	 * 
	 * @param frmproductfundsBOReq
	 * @return frmproductfundsBOResp
	 * @throws TASABusinessException
	 */
	public List<FrmProductFundsBO> formload()
					throws TASABusinessException {
		LOGGER.debug("Entering into the method: formload()");
		List<FrmProductFundsBO> frmproductfundsBOResp = null;
		try {
			frmproductfundsBOResp = new ArrayList<FrmProductFundsBO>();
			// populate the Fund list
			frmproductfundsBOResp = frmproductfundsRepository
					.formLoad1();
			// adodc.ConnectionString=cn;
			// adodc.RecordSource=strSQL;
			// adodc(.getRefresh());
			// TODO Datagrid formation
			// formatdatagrid(frmproductfundsBOReq);
			// formats columns
			// TODO Handle in Angualr - Status bar setting
			// statusBar.SimpleText="As of Date";
		} catch (Exception ex) {
			LOGGER.error("Error occurred in method: formload()"
					+ "and terminated due to " + ex.getMessage());
			throw new TASABusinessException(ex);
		}
		LOGGER.debug("Exiting the method: formload()" + "return : "
				+ frmproductfundsBOResp);
		return frmproductfundsBOResp;
	}
	/**
	 * Method formunload
	 * 
	 * @param frmproductfundsBOReq
	 * @return frmproductfundsBOResp
	 * @throws TASABusinessException
	 */
	// TODO Handle In Angualr - form unload
	// public List<FrmProductFundsBO> formunload(FrmProductFundsBO
	// frmproductfundsBOReq) throws TASABusinessException{
	// LOGGER.debug("Entering into the method: formunload()"+"argument : "+frmproductfundsBOReq);
	// List<FrmProductFundsBO> frmproductfundsBOResp = null;
	// try{
	// frmproductfundsBOResp = new ArrayList<FrmProductFundsBO>();
	// }catch (Exception ex){
	// LOGGER.error("Error occurred in method: formunload()"+"and terminated due to "
	// + ex.getMessage());
	// throw new TASABusinessException(ex);
	// }
	// LOGGER.debug("Exiting the method: formunload()"+"return : "+frmproductfundsBOResp);
	// return frmproductfundsBOResp;
	// }
	/**
	 * Method formatdatagrid
	 * 
	 * @param frmproductfundsBOReq
	 * @return frmproductfundsBOResp
	 * @throws TASABusinessException
	 */
	// TODO Handle in Angular - DataGrid Column setting
	// public List<FrmProductFundsBO> formatdatagrid(FrmProductFundsBO
	// frmproductfundsBOReq) throws TASABusinessException{
	// LOGGER.debug("Entering into the method: formatdatagrid()"+"argument : "+frmproductfundsBOReq);
	// List<FrmProductFundsBO> frmproductfundsBOResp = null;
	// try{
	// frmproductfundsBOResp = new ArrayList<FrmProductFundsBO>();
	// .HeadFont.Bold=true;
	// .Columns(0)="As Of Date on FPU";
	// .Columns(0).Alignment=dbgVBUtilFunctions.left;
	// .Columns(0).Width=.Width / 7;
	// .Columns(1)="Inv Fund Category";
	// .Columns(1).Alignment=dbgVBUtilFunctions.left;
	// .Columns(1).Width=.Width / 7;
	// .Columns(2)="Description";
	// .Columns(2).Alignment=dbgVBUtilFunctions.left;
	// .Columns(2).Width=.Width / 4 + 100;
	// .Columns(3)="Last Updated";
	// .Columns(3).Alignment=dbgCenter;
	// .Columns(3).Width=.Width / 5 + 100;
	// .Columns(3).Numberformat()="mm/dd/yyyy";
	// .Columns(4)="Updated By";
	// .Columns(4).Alignment=dbgCenter;
	// .Columns(4).Width=.Width / 6;
	// }catch (Exception ex){
	// LOGGER.error("Error occurred in method: formatdatagrid()"+"and terminated due to "
	// + ex.getMessage());
	// throw new TASABusinessException(ex);
	// }
	// LOGGER.debug("Exiting the method: formatdatagrid()"+"return : "+frmproductfundsBOResp);
	// return frmproductfundsBOResp;
	// }

}